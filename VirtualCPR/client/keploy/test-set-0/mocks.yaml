version: api.keploy.io/v1beta1
name: mocks
kind: Http
spec:
    metadata:
        name: Http
        operation: OPTIONS
        type: HTTP_CLIENT
    genericrequests: []
    genericresponses: []
    redisrequests: []
    redisresponses: []
    httpreq:
        method: OPTIONS
        proto_major: 1
        proto_minor: 1
        url: /add
        header:
            Accept: '*/*'
            Accept-Encoding: gzip, deflate, br, zstd
            Access-Control-Request-Headers: content-type
            Access-Control-Request-Method: POST
            Connection: keep-alive
            Origin: http://localhost:5173
            Referer: http://localhost:5173/
            Sec-Fetch-Dest: empty
            Sec-Fetch-Mode: cors
            Sec-Fetch-Site: same-site
            User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) HeadlessChrome/138.0.7204.23 Safari/537.36
        body: ""
        timestamp: 2025-07-04T11:54:42.887044+05:30
    httpresp:
        status_code: 204
        header:
            Access-Control-Allow-Headers: content-type
            Access-Control-Allow-Methods: GET,HEAD,PUT,PATCH,POST,DELETE
            Access-Control-Allow-Origin: '*'
            Connection: keep-alive
            Content-Length: "0"
            Date: Fri, 04 Jul 2025 06:24:43 GMT
            Keep-Alive: timeout=5
            Vary: Access-Control-Request-Headers
            X-Powered-By: Express
        body: ""
        status_message: 204 No Content
        proto_major: 0
        proto_minor: 0
        timestamp: 2025-07-04T11:54:42.887044+05:30
    created: 1751610282
    mongorequests: []
    mongoresponses: []
    postgresrequests: []
    postgresresponses: []
    grpcreq: null
    grpcresp: null
    mysqlrequests: []
    mysqlresponses: []
    reqtimestampmock: 2025-07-04T11:54:42.887045+05:30
    restimestampmock: 2025-07-04T11:54:42.887045+05:30
testmodeinfo:
    id: 0
    isfiltered: false
    sortorder: 0
connectionid: ""
---
version: api.keploy.io/v1beta1
name: mocks
kind: Http
spec:
    metadata:
        name: Http
        operation: POST
        type: HTTP_CLIENT
    genericrequests: []
    genericresponses: []
    redisrequests: []
    redisresponses: []
    httpreq:
        method: POST
        proto_major: 1
        proto_minor: 1
        url: /add
        header:
            Accept: application/json, text/plain, */*
            Accept-Encoding: gzip, deflate, br, zstd
            Accept-Language: en-US
            Connection: keep-alive
            Content-Length: "86"
            Content-Type: application/json
            Origin: http://localhost:5173
            Referer: http://localhost:5173/
            Sec-Ch-Ua: '"Not)A;Brand";v="8", "Chromium";v="138", "HeadlessChrome";v="138"'
            Sec-Ch-Ua-Mobile: ?0
            Sec-Ch-Ua-Platform: '"macOS"'
            Sec-Fetch-Dest: empty
            Sec-Fetch-Mode: cors
            Sec-Fetch-Site: same-site
            User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) HeadlessChrome/138.0.7204.23 Safari/537.36
        body: ""
        timestamp: 2025-07-04T11:54:43.265285+05:30
    httpresp:
        status_code: 200
        header:
            Access-Control-Allow-Origin: '*'
            Connection: keep-alive
            Content-Length: "146"
            Content-Type: application/json; charset=utf-8
            Date: Fri, 04 Jul 2025 06:24:43 GMT
            Etag: W/"92-KnFQ7mb3IkJldeTep+J6v17TLJw"
            Keep-Alive: timeout=5
            X-Powered-By: Express
        body: '{"success":true,"message":"User added successfully","data":{"name":"Test User","githubUsername":"testuser123","YourQuote":"This is a test quote"}}'
        status_message: 200 OK
        proto_major: 0
        proto_minor: 0
        timestamp: 2025-07-04T11:54:43.265287+05:30
    created: 1751610283
    mongorequests: []
    mongoresponses: []
    postgresrequests: []
    postgresresponses: []
    grpcreq: null
    grpcresp: null
    mysqlrequests: []
    mysqlresponses: []
    reqtimestampmock: 2025-07-04T11:54:43.265287+05:30
    restimestampmock: 2025-07-04T11:54:43.265287+05:30
testmodeinfo:
    id: 0
    isfiltered: false
    sortorder: 0
connectionid: ""
---
version: api.keploy.io/v1beta1
name: mocks
kind: Http
spec:
    metadata:
        name: Http
        operation: GET
        type: HTTP_CLIENT
    genericrequests: []
    genericresponses: []
    redisrequests: []
    redisresponses: []
    httpreq:
        method: GET
        proto_major: 1
        proto_minor: 1
        url: /read
        header:
            Accept: application/json, text/plain, */*
            Accept-Encoding: gzip, deflate, br, zstd
            Accept-Language: en-US
            Connection: keep-alive
            Origin: http://localhost:5173
            Referer: http://localhost:5173/
            Sec-Ch-Ua: '"Not)A;Brand";v="8", "Chromium";v="138", "HeadlessChrome";v="138"'
            Sec-Ch-Ua-Mobile: ?0
            Sec-Ch-Ua-Platform: '"macOS"'
            Sec-Fetch-Dest: empty
            Sec-Fetch-Mode: cors
            Sec-Fetch-Site: same-site
            User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) HeadlessChrome/138.0.7204.23 Safari/537.36
        body: ""
        timestamp: 2025-07-04T11:54:43.628431+05:30
    httpresp:
        status_code: 200
        header:
            Access-Control-Allow-Origin: '*'
            Connection: keep-alive
            Content-Length: "1836"
            Content-Type: application/json; charset=utf-8
            Date: Fri, 04 Jul 2025 06:24:43 GMT
            Etag: W/"72c-Jv2e+VFA3TC3As3Z4EKb4hvS34Q"
            Keep-Alive: timeout=5
            X-Powered-By: Express
        body: '{"success":true,"message":"Users fetched successfully","data":[{"_id":"686521d38d65ad9b4738c97a","name":"Harsh","githubUsername":"None","YourQuote":"Happy World","__v":0},{"_id":"686629b457a8f15b1a559034","name":"Test User","githubUsername":"testuser123","YourQuote":"This is a test quote","__v":0},{"_id":"68662a51a3c969d8f3dfb455","name":"Test User","githubUsername":"testuser123","YourQuote":"This is a test quote","__v":0},{"_id":"6866b2a492c74e969dd16cdb","name":"Test User","githubUsername":"testuser123","YourQuote":"This is a test quote","__v":0},{"_id":"6866b322ed73c5f3fe9c138f","name":"Test User","githubUsername":"testuser123","YourQuote":"This is a test quote","__v":0},{"_id":"6866b4625de3c569f15aafc2","name":"Test User","githubUsername":"testuser123","YourQuote":"This is a test quote","__v":0},{"_id":"6866badae460875eb7eb81c3","name":"Test User","githubUsername":"testuser123","YourQuote":"This is a test quote","__v":0},{"_id":"6866c09a35ff623c3181af64","name":"Test User","githubUsername":"testuser123","YourQuote":"This is a test quote","__v":0},{"_id":"6866c368d56166fe3069416a","name":"Test User","githubUsername":"testuser123","YourQuote":"This is a test quote","__v":0},{"_id":"6866c9fe53c7249f7a97b2ed","name":"Test User","githubUsername":"testuser123","YourQuote":"This is a test quote","__v":0},{"_id":"686767e5a301982f1d8c7cc9","name":"Test User","githubUsername":"testuser123","YourQuote":"This is a test quote","__v":0},{"_id":"68676b3759bb64a65220b39b","name":"Test User","githubUsername":"testuser123","YourQuote":"This is a test quote","__v":0},{"_id":"68676dab20c4ea6d0b39e3ba","name":"Test User","githubUsername":"testuser123","YourQuote":"This is a test quote","__v":0},{"_id":"686773ab676b8c8532ae2da3","name":"Test User","githubUsername":"testuser123","YourQuote":"This is a test quote","__v":0}]}'
        status_message: 200 OK
        proto_major: 0
        proto_minor: 0
        timestamp: 2025-07-04T11:54:43.628432+05:30
    created: 1751610283
    mongorequests: []
    mongoresponses: []
    postgresrequests: []
    postgresresponses: []
    grpcreq: null
    grpcresp: null
    mysqlrequests: []
    mysqlresponses: []
    reqtimestampmock: 2025-07-04T11:54:43.628432+05:30
    restimestampmock: 2025-07-04T11:54:43.628432+05:30
testmodeinfo:
    id: 0
    isfiltered: false
    sortorder: 0
connectionid: ""
---
version: api.keploy.io/v1beta1
name: mocks
kind: Http
spec:
    metadata:
        name: Http
        operation: GET
        type: HTTP_CLIENT
    genericrequests: []
    genericresponses: []
    redisrequests: []
    redisresponses: []
    httpreq:
        method: GET
        proto_major: 1
        proto_minor: 1
        url: /read
        header:
            Accept: application/json, text/plain, */*
            Accept-Encoding: gzip, deflate, br, zstd
            Accept-Language: en-US
            Connection: keep-alive
            Origin: http://localhost:5173
            Referer: http://localhost:5173/
            Sec-Ch-Ua: '"Not)A;Brand";v="8", "Chromium";v="138", "HeadlessChrome";v="138"'
            Sec-Ch-Ua-Mobile: ?0
            Sec-Ch-Ua-Platform: '"macOS"'
            Sec-Fetch-Dest: empty
            Sec-Fetch-Mode: cors
            Sec-Fetch-Site: same-site
            User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) HeadlessChrome/138.0.7204.23 Safari/537.36
        body: ""
        timestamp: 2025-07-04T11:54:44.271865+05:30
    httpresp:
        status_code: 200
        header:
            Access-Control-Allow-Origin: '*'
            Connection: keep-alive
            Content-Length: "1836"
            Content-Type: application/json; charset=utf-8
            Date: Fri, 04 Jul 2025 06:24:44 GMT
            Etag: W/"72c-Jv2e+VFA3TC3As3Z4EKb4hvS34Q"
            Keep-Alive: timeout=5
            X-Powered-By: Express
        body: '{"success":true,"message":"Users fetched successfully","data":[{"_id":"686521d38d65ad9b4738c97a","name":"Harsh","githubUsername":"None","YourQuote":"Happy World","__v":0},{"_id":"686629b457a8f15b1a559034","name":"Test User","githubUsername":"testuser123","YourQuote":"This is a test quote","__v":0},{"_id":"68662a51a3c969d8f3dfb455","name":"Test User","githubUsername":"testuser123","YourQuote":"This is a test quote","__v":0},{"_id":"6866b2a492c74e969dd16cdb","name":"Test User","githubUsername":"testuser123","YourQuote":"This is a test quote","__v":0},{"_id":"6866b322ed73c5f3fe9c138f","name":"Test User","githubUsername":"testuser123","YourQuote":"This is a test quote","__v":0},{"_id":"6866b4625de3c569f15aafc2","name":"Test User","githubUsername":"testuser123","YourQuote":"This is a test quote","__v":0},{"_id":"6866badae460875eb7eb81c3","name":"Test User","githubUsername":"testuser123","YourQuote":"This is a test quote","__v":0},{"_id":"6866c09a35ff623c3181af64","name":"Test User","githubUsername":"testuser123","YourQuote":"This is a test quote","__v":0},{"_id":"6866c368d56166fe3069416a","name":"Test User","githubUsername":"testuser123","YourQuote":"This is a test quote","__v":0},{"_id":"6866c9fe53c7249f7a97b2ed","name":"Test User","githubUsername":"testuser123","YourQuote":"This is a test quote","__v":0},{"_id":"686767e5a301982f1d8c7cc9","name":"Test User","githubUsername":"testuser123","YourQuote":"This is a test quote","__v":0},{"_id":"68676b3759bb64a65220b39b","name":"Test User","githubUsername":"testuser123","YourQuote":"This is a test quote","__v":0},{"_id":"68676dab20c4ea6d0b39e3ba","name":"Test User","githubUsername":"testuser123","YourQuote":"This is a test quote","__v":0},{"_id":"686773ab676b8c8532ae2da3","name":"Test User","githubUsername":"testuser123","YourQuote":"This is a test quote","__v":0}]}'
        status_message: 200 OK
        proto_major: 0
        proto_minor: 0
        timestamp: 2025-07-04T11:54:44.271865+05:30
    created: 1751610284
    mongorequests: []
    mongoresponses: []
    postgresrequests: []
    postgresresponses: []
    grpcreq: null
    grpcresp: null
    mysqlrequests: []
    mysqlresponses: []
    reqtimestampmock: 2025-07-04T11:54:44.271865+05:30
    restimestampmock: 2025-07-04T11:54:44.271865+05:30
testmodeinfo:
    id: 0
    isfiltered: false
    sortorder: 0
connectionid: ""
---
version: api.keploy.io/v1beta1
name: mocks
kind: Http
spec:
    metadata:
        name: Http
        operation: GET
        type: HTTP_CLIENT
    genericrequests: []
    genericresponses: []
    redisrequests: []
    redisresponses: []
    httpreq:
        method: GET
        proto_major: 1
        proto_minor: 1
        url: /read
        header:
            Accept: application/json, text/plain, */*
            Accept-Encoding: gzip, deflate, br, zstd
            Accept-Language: en-US
            Connection: keep-alive
            Origin: http://localhost:5173
            Referer: http://localhost:5173/
            Sec-Ch-Ua: '"Not)A;Brand";v="8", "Chromium";v="138", "HeadlessChrome";v="138"'
            Sec-Ch-Ua-Mobile: ?0
            Sec-Ch-Ua-Platform: '"macOS"'
            Sec-Fetch-Dest: empty
            Sec-Fetch-Mode: cors
            Sec-Fetch-Site: same-site
            User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) HeadlessChrome/138.0.7204.23 Safari/537.36
        body: ""
        timestamp: 2025-07-04T11:54:46.16826+05:30
    httpresp:
        status_code: 200
        header:
            Access-Control-Allow-Origin: '*'
            Connection: keep-alive
            Content-Length: "1836"
            Content-Type: application/json; charset=utf-8
            Date: Fri, 04 Jul 2025 06:24:46 GMT
            Etag: W/"72c-Jv2e+VFA3TC3As3Z4EKb4hvS34Q"
            Keep-Alive: timeout=5
            X-Powered-By: Express
        body: '{"success":true,"message":"Users fetched successfully","data":[{"_id":"686521d38d65ad9b4738c97a","name":"Harsh","githubUsername":"None","YourQuote":"Happy World","__v":0},{"_id":"686629b457a8f15b1a559034","name":"Test User","githubUsername":"testuser123","YourQuote":"This is a test quote","__v":0},{"_id":"68662a51a3c969d8f3dfb455","name":"Test User","githubUsername":"testuser123","YourQuote":"This is a test quote","__v":0},{"_id":"6866b2a492c74e969dd16cdb","name":"Test User","githubUsername":"testuser123","YourQuote":"This is a test quote","__v":0},{"_id":"6866b322ed73c5f3fe9c138f","name":"Test User","githubUsername":"testuser123","YourQuote":"This is a test quote","__v":0},{"_id":"6866b4625de3c569f15aafc2","name":"Test User","githubUsername":"testuser123","YourQuote":"This is a test quote","__v":0},{"_id":"6866badae460875eb7eb81c3","name":"Test User","githubUsername":"testuser123","YourQuote":"This is a test quote","__v":0},{"_id":"6866c09a35ff623c3181af64","name":"Test User","githubUsername":"testuser123","YourQuote":"This is a test quote","__v":0},{"_id":"6866c368d56166fe3069416a","name":"Test User","githubUsername":"testuser123","YourQuote":"This is a test quote","__v":0},{"_id":"6866c9fe53c7249f7a97b2ed","name":"Test User","githubUsername":"testuser123","YourQuote":"This is a test quote","__v":0},{"_id":"686767e5a301982f1d8c7cc9","name":"Test User","githubUsername":"testuser123","YourQuote":"This is a test quote","__v":0},{"_id":"68676b3759bb64a65220b39b","name":"Test User","githubUsername":"testuser123","YourQuote":"This is a test quote","__v":0},{"_id":"68676dab20c4ea6d0b39e3ba","name":"Test User","githubUsername":"testuser123","YourQuote":"This is a test quote","__v":0},{"_id":"686773ab676b8c8532ae2da3","name":"Test User","githubUsername":"testuser123","YourQuote":"This is a test quote","__v":0}]}'
        status_message: 200 OK
        proto_major: 0
        proto_minor: 0
        timestamp: 2025-07-04T11:54:46.168262+05:30
    created: 1751610286
    mongorequests: []
    mongoresponses: []
    postgresrequests: []
    postgresresponses: []
    grpcreq: null
    grpcresp: null
    mysqlrequests: []
    mysqlresponses: []
    reqtimestampmock: 2025-07-04T11:54:46.168262+05:30
    restimestampmock: 2025-07-04T11:54:46.168262+05:30
testmodeinfo:
    id: 0
    isfiltered: false
    sortorder: 0
connectionid: ""
---
version: api.keploy.io/v1beta1
name: mocks
kind: Http
spec:
    metadata:
        name: Http
        operation: GET
        type: HTTP_CLIENT
    genericrequests: []
    genericresponses: []
    redisrequests: []
    redisresponses: []
    httpreq:
        method: GET
        proto_major: 1
        proto_minor: 1
        url: /edit/686521d38d65ad9b4738c97a
        header:
            Accept: application/json, text/plain, */*
            Accept-Encoding: gzip, deflate, br, zstd
            Accept-Language: en-US
            Connection: keep-alive
            Origin: http://localhost:5173
            Referer: http://localhost:5173/
            Sec-Ch-Ua: '"Not)A;Brand";v="8", "Chromium";v="138", "HeadlessChrome";v="138"'
            Sec-Ch-Ua-Mobile: ?0
            Sec-Ch-Ua-Platform: '"macOS"'
            Sec-Fetch-Dest: empty
            Sec-Fetch-Mode: cors
            Sec-Fetch-Site: same-site
            User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) HeadlessChrome/138.0.7204.23 Safari/537.36
        body: ""
        timestamp: 2025-07-04T11:54:46.803461+05:30
    httpresp:
        status_code: 200
        header:
            Access-Control-Allow-Origin: '*'
            Connection: keep-alive
            Content-Length: "167"
            Content-Type: application/json; charset=utf-8
            Date: Fri, 04 Jul 2025 06:24:46 GMT
            Etag: W/"a7-7FGwU0590G4W+f2oeLWsvZwWErw"
            Keep-Alive: timeout=5
            X-Powered-By: Express
        body: '{"success":true,"message":"User found successfully","data":{"_id":"686521d38d65ad9b4738c97a","name":"Harsh","githubUsername":"None","YourQuote":"Happy World","__v":0}}'
        status_message: 200 OK
        proto_major: 0
        proto_minor: 0
        timestamp: 2025-07-04T11:54:46.803462+05:30
    created: 1751610286
    mongorequests: []
    mongoresponses: []
    postgresrequests: []
    postgresresponses: []
    grpcreq: null
    grpcresp: null
    mysqlrequests: []
    mysqlresponses: []
    reqtimestampmock: 2025-07-04T11:54:46.803462+05:30
    restimestampmock: 2025-07-04T11:54:46.803463+05:30
testmodeinfo:
    id: 0
    isfiltered: false
    sortorder: 0
connectionid: ""
---
version: api.keploy.io/v1beta1
name: mocks
kind: Http
spec:
    metadata:
        name: Http
        operation: OPTIONS
        type: HTTP_CLIENT
    genericrequests: []
    genericresponses: []
    redisrequests: []
    redisresponses: []
    httpreq:
        method: OPTIONS
        proto_major: 1
        proto_minor: 1
        url: /edit/686521d38d65ad9b4738c97a
        header:
            Accept: '*/*'
            Accept-Encoding: gzip, deflate, br, zstd
            Access-Control-Request-Headers: content-type
            Access-Control-Request-Method: POST
            Connection: keep-alive
            Origin: http://localhost:5173
            Referer: http://localhost:5173/
            Sec-Fetch-Dest: empty
            Sec-Fetch-Mode: cors
            Sec-Fetch-Site: same-site
            User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) HeadlessChrome/138.0.7204.23 Safari/537.36
        body: ""
        timestamp: 2025-07-04T11:54:46.892639+05:30
    httpresp:
        status_code: 204
        header:
            Access-Control-Allow-Headers: content-type
            Access-Control-Allow-Methods: GET,HEAD,PUT,PATCH,POST,DELETE
            Access-Control-Allow-Origin: '*'
            Connection: keep-alive
            Content-Length: "0"
            Date: Fri, 04 Jul 2025 06:24:47 GMT
            Keep-Alive: timeout=5
            Vary: Access-Control-Request-Headers
            X-Powered-By: Express
        body: ""
        status_message: 204 No Content
        proto_major: 0
        proto_minor: 0
        timestamp: 2025-07-04T11:54:46.89264+05:30
    created: 1751610286
    mongorequests: []
    mongoresponses: []
    postgresrequests: []
    postgresresponses: []
    grpcreq: null
    grpcresp: null
    mysqlrequests: []
    mysqlresponses: []
    reqtimestampmock: 2025-07-04T11:54:46.89264+05:30
    restimestampmock: 2025-07-04T11:54:46.89264+05:30
testmodeinfo:
    id: 0
    isfiltered: false
    sortorder: 0
connectionid: ""
---
version: api.keploy.io/v1beta1
name: mocks
kind: Http
spec:
    metadata:
        name: Http
        operation: POST
        type: HTTP_CLIENT
    genericrequests: []
    genericresponses: []
    redisrequests: []
    redisresponses: []
    httpreq:
        method: POST
        proto_major: 1
        proto_minor: 1
        url: /edit/686521d38d65ad9b4738c97a
        header:
            Accept: application/json, text/plain, */*
            Accept-Encoding: gzip, deflate, br, zstd
            Accept-Language: en-US
            Connection: keep-alive
            Content-Length: "136"
            Content-Type: application/json
            Origin: http://localhost:5173
            Referer: http://localhost:5173/
            Sec-Ch-Ua: '"Not)A;Brand";v="8", "Chromium";v="138", "HeadlessChrome";v="138"'
            Sec-Ch-Ua-Mobile: ?0
            Sec-Ch-Ua-Platform: '"macOS"'
            Sec-Fetch-Dest: empty
            Sec-Fetch-Mode: cors
            Sec-Fetch-Site: same-site
            User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) HeadlessChrome/138.0.7204.23 Safari/537.36
        body: ""
        timestamp: 2025-07-04T11:54:47.252226+05:30
    httpresp:
        status_code: 200
        header:
            Access-Control-Allow-Origin: '*'
            Connection: keep-alive
            Content-Length: "169"
            Content-Type: application/json; charset=utf-8
            Date: Fri, 04 Jul 2025 06:24:47 GMT
            Etag: W/"a9-VE8egKQUiPM1gFJPaDr4NKus32Q"
            Keep-Alive: timeout=5
            X-Powered-By: Express
        body: '{"success":true,"message":"User updated successfully","data":{"_id":"686521d38d65ad9b4738c97a","name":"Harsh","githubUsername":"None","YourQuote":"Happy World","__v":0}}'
        status_message: 200 OK
        proto_major: 0
        proto_minor: 0
        timestamp: 2025-07-04T11:54:47.25272+05:30
    created: 1751610287
    mongorequests: []
    mongoresponses: []
    postgresrequests: []
    postgresresponses: []
    grpcreq: null
    grpcresp: null
    mysqlrequests: []
    mysqlresponses: []
    reqtimestampmock: 2025-07-04T11:54:47.25272+05:30
    restimestampmock: 2025-07-04T11:54:47.252721+05:30
testmodeinfo:
    id: 0
    isfiltered: false
    sortorder: 0
connectionid: ""
---
version: api.keploy.io/v1beta1
name: mocks
kind: Http
spec:
    metadata:
        name: Http
        operation: GET
        type: HTTP_CLIENT
    genericrequests: []
    genericresponses: []
    redisrequests: []
    redisresponses: []
    httpreq:
        method: GET
        proto_major: 1
        proto_minor: 1
        url: /read
        header:
            Accept: application/json, text/plain, */*
            Accept-Encoding: gzip, deflate, br, zstd
            Accept-Language: en-US
            Connection: keep-alive
            Origin: http://localhost:5173
            Referer: http://localhost:5173/
            Sec-Ch-Ua: '"Not)A;Brand";v="8", "Chromium";v="138", "HeadlessChrome";v="138"'
            Sec-Ch-Ua-Mobile: ?0
            Sec-Ch-Ua-Platform: '"macOS"'
            Sec-Fetch-Dest: empty
            Sec-Fetch-Mode: cors
            Sec-Fetch-Site: same-site
            User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) HeadlessChrome/138.0.7204.23 Safari/537.36
        body: ""
        timestamp: 2025-07-04T11:54:48.244825+05:30
    httpresp:
        status_code: 200
        header:
            Access-Control-Allow-Origin: '*'
            Connection: keep-alive
            Content-Length: "1865"
            Content-Type: application/json; charset=utf-8
            Date: Fri, 04 Jul 2025 06:24:48 GMT
            Etag: W/"749-fJ2om5ns/TqliaOFqDYvIIBkeu0"
            Keep-Alive: timeout=5
            X-Powered-By: Express
        body: '{"success":true,"message":"Users fetched successfully","data":[{"_id":"686521d38d65ad9b4738c97a","name":"Updated Test User","githubUsername":"updateduser123","YourQuote":"Updated test quote","__v":0},{"_id":"686629b457a8f15b1a559034","name":"Test User","githubUsername":"testuser123","YourQuote":"This is a test quote","__v":0},{"_id":"68662a51a3c969d8f3dfb455","name":"Test User","githubUsername":"testuser123","YourQuote":"This is a test quote","__v":0},{"_id":"6866b2a492c74e969dd16cdb","name":"Test User","githubUsername":"testuser123","YourQuote":"This is a test quote","__v":0},{"_id":"6866b322ed73c5f3fe9c138f","name":"Test User","githubUsername":"testuser123","YourQuote":"This is a test quote","__v":0},{"_id":"6866b4625de3c569f15aafc2","name":"Test User","githubUsername":"testuser123","YourQuote":"This is a test quote","__v":0},{"_id":"6866badae460875eb7eb81c3","name":"Test User","githubUsername":"testuser123","YourQuote":"This is a test quote","__v":0},{"_id":"6866c09a35ff623c3181af64","name":"Test User","githubUsername":"testuser123","YourQuote":"This is a test quote","__v":0},{"_id":"6866c368d56166fe3069416a","name":"Test User","githubUsername":"testuser123","YourQuote":"This is a test quote","__v":0},{"_id":"6866c9fe53c7249f7a97b2ed","name":"Test User","githubUsername":"testuser123","YourQuote":"This is a test quote","__v":0},{"_id":"686767e5a301982f1d8c7cc9","name":"Test User","githubUsername":"testuser123","YourQuote":"This is a test quote","__v":0},{"_id":"68676b3759bb64a65220b39b","name":"Test User","githubUsername":"testuser123","YourQuote":"This is a test quote","__v":0},{"_id":"68676dab20c4ea6d0b39e3ba","name":"Test User","githubUsername":"testuser123","YourQuote":"This is a test quote","__v":0},{"_id":"686773ab676b8c8532ae2da3","name":"Test User","githubUsername":"testuser123","YourQuote":"This is a test quote","__v":0}]}'
        status_message: 200 OK
        proto_major: 0
        proto_minor: 0
        timestamp: 2025-07-04T11:54:48.244826+05:30
    created: 1751610288
    mongorequests: []
    mongoresponses: []
    postgresrequests: []
    postgresresponses: []
    grpcreq: null
    grpcresp: null
    mysqlrequests: []
    mysqlresponses: []
    reqtimestampmock: 2025-07-04T11:54:48.244826+05:30
    restimestampmock: 2025-07-04T11:54:48.244826+05:30
testmodeinfo:
    id: 0
    isfiltered: false
    sortorder: 0
connectionid: ""
---
version: api.keploy.io/v1beta1
name: mocks
kind: Http
spec:
    metadata:
        name: Http
        operation: GET
        type: HTTP_CLIENT
    genericrequests: []
    genericresponses: []
    redisrequests: []
    redisresponses: []
    httpreq:
        method: GET
        proto_major: 1
        proto_minor: 1
        url: /read
        header:
            Accept: application/json, text/plain, */*
            Accept-Encoding: gzip, deflate, br, zstd
            Accept-Language: en-US
            Connection: keep-alive
            Origin: http://localhost:5173
            Referer: http://localhost:5173/
            Sec-Ch-Ua: '"Not)A;Brand";v="8", "Chromium";v="138", "HeadlessChrome";v="138"'
            Sec-Ch-Ua-Mobile: ?0
            Sec-Ch-Ua-Platform: '"macOS"'
            Sec-Fetch-Dest: empty
            Sec-Fetch-Mode: cors
            Sec-Fetch-Site: same-site
            User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) HeadlessChrome/138.0.7204.23 Safari/537.36
        body: ""
        timestamp: 2025-07-04T11:54:49.257611+05:30
    httpresp:
        status_code: 200
        header:
            Access-Control-Allow-Origin: '*'
            Connection: keep-alive
            Content-Length: "1865"
            Content-Type: application/json; charset=utf-8
            Date: Fri, 04 Jul 2025 06:24:49 GMT
            Etag: W/"749-fJ2om5ns/TqliaOFqDYvIIBkeu0"
            Keep-Alive: timeout=5
            X-Powered-By: Express
        body: '{"success":true,"message":"Users fetched successfully","data":[{"_id":"686521d38d65ad9b4738c97a","name":"Updated Test User","githubUsername":"updateduser123","YourQuote":"Updated test quote","__v":0},{"_id":"686629b457a8f15b1a559034","name":"Test User","githubUsername":"testuser123","YourQuote":"This is a test quote","__v":0},{"_id":"68662a51a3c969d8f3dfb455","name":"Test User","githubUsername":"testuser123","YourQuote":"This is a test quote","__v":0},{"_id":"6866b2a492c74e969dd16cdb","name":"Test User","githubUsername":"testuser123","YourQuote":"This is a test quote","__v":0},{"_id":"6866b322ed73c5f3fe9c138f","name":"Test User","githubUsername":"testuser123","YourQuote":"This is a test quote","__v":0},{"_id":"6866b4625de3c569f15aafc2","name":"Test User","githubUsername":"testuser123","YourQuote":"This is a test quote","__v":0},{"_id":"6866badae460875eb7eb81c3","name":"Test User","githubUsername":"testuser123","YourQuote":"This is a test quote","__v":0},{"_id":"6866c09a35ff623c3181af64","name":"Test User","githubUsername":"testuser123","YourQuote":"This is a test quote","__v":0},{"_id":"6866c368d56166fe3069416a","name":"Test User","githubUsername":"testuser123","YourQuote":"This is a test quote","__v":0},{"_id":"6866c9fe53c7249f7a97b2ed","name":"Test User","githubUsername":"testuser123","YourQuote":"This is a test quote","__v":0},{"_id":"686767e5a301982f1d8c7cc9","name":"Test User","githubUsername":"testuser123","YourQuote":"This is a test quote","__v":0},{"_id":"68676b3759bb64a65220b39b","name":"Test User","githubUsername":"testuser123","YourQuote":"This is a test quote","__v":0},{"_id":"68676dab20c4ea6d0b39e3ba","name":"Test User","githubUsername":"testuser123","YourQuote":"This is a test quote","__v":0},{"_id":"686773ab676b8c8532ae2da3","name":"Test User","githubUsername":"testuser123","YourQuote":"This is a test quote","__v":0}]}'
        status_message: 200 OK
        proto_major: 0
        proto_minor: 0
        timestamp: 2025-07-04T11:54:49.257612+05:30
    created: 1751610289
    mongorequests: []
    mongoresponses: []
    postgresrequests: []
    postgresresponses: []
    grpcreq: null
    grpcresp: null
    mysqlrequests: []
    mysqlresponses: []
    reqtimestampmock: 2025-07-04T11:54:49.257612+05:30
    restimestampmock: 2025-07-04T11:54:49.257612+05:30
testmodeinfo:
    id: 0
    isfiltered: false
    sortorder: 0
connectionid: ""
---
version: api.keploy.io/v1beta1
name: mocks
kind: Http
spec:
    metadata:
        name: Http
        operation: OPTIONS
        type: HTTP_CLIENT
    genericrequests: []
    genericresponses: []
    redisrequests: []
    redisresponses: []
    httpreq:
        method: OPTIONS
        proto_major: 1
        proto_minor: 1
        url: /delete
        header:
            Accept: '*/*'
            Accept-Encoding: gzip, deflate, br, zstd
            Access-Control-Request-Headers: content-type
            Access-Control-Request-Method: POST
            Connection: keep-alive
            Origin: http://localhost:5173
            Referer: http://localhost:5173/
            Sec-Fetch-Dest: empty
            Sec-Fetch-Mode: cors
            Sec-Fetch-Site: same-site
            User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) HeadlessChrome/138.0.7204.23 Safari/537.36
        body: ""
        timestamp: 2025-07-04T11:54:49.764743+05:30
    httpresp:
        status_code: 204
        header:
            Access-Control-Allow-Headers: content-type
            Access-Control-Allow-Methods: GET,HEAD,PUT,PATCH,POST,DELETE
            Access-Control-Allow-Origin: '*'
            Connection: keep-alive
            Content-Length: "0"
            Date: Fri, 04 Jul 2025 06:24:49 GMT
            Keep-Alive: timeout=5
            Vary: Access-Control-Request-Headers
            X-Powered-By: Express
        body: ""
        status_message: 204 No Content
        proto_major: 0
        proto_minor: 0
        timestamp: 2025-07-04T11:54:49.764744+05:30
    created: 1751610289
    mongorequests: []
    mongoresponses: []
    postgresrequests: []
    postgresresponses: []
    grpcreq: null
    grpcresp: null
    mysqlrequests: []
    mysqlresponses: []
    reqtimestampmock: 2025-07-04T11:54:49.764744+05:30
    restimestampmock: 2025-07-04T11:54:49.764744+05:30
testmodeinfo:
    id: 0
    isfiltered: false
    sortorder: 0
connectionid: ""
---
version: api.keploy.io/v1beta1
name: mocks
kind: Http
spec:
    metadata:
        name: Http
        operation: POST
        type: HTTP_CLIENT
    genericrequests: []
    genericresponses: []
    redisrequests: []
    redisresponses: []
    httpreq:
        method: POST
        proto_major: 1
        proto_minor: 1
        url: /delete
        header:
            Accept: application/json, text/plain, */*
            Accept-Encoding: gzip, deflate, br, zstd
            Accept-Language: en-US
            Connection: keep-alive
            Content-Length: "33"
            Content-Type: application/json
            Origin: http://localhost:5173
            Referer: http://localhost:5173/
            Sec-Ch-Ua: '"Not)A;Brand";v="8", "Chromium";v="138", "HeadlessChrome";v="138"'
            Sec-Ch-Ua-Mobile: ?0
            Sec-Ch-Ua-Platform: '"macOS"'
            Sec-Fetch-Dest: empty
            Sec-Fetch-Mode: cors
            Sec-Fetch-Site: same-site
            User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) HeadlessChrome/138.0.7204.23 Safari/537.36
        body: ""
        timestamp: 2025-07-04T11:54:50.11669+05:30
    httpresp:
        status_code: 200
        header:
            Access-Control-Allow-Origin: '*'
            Connection: keep-alive
            Content-Length: "86"
            Content-Type: application/json; charset=utf-8
            Date: Fri, 04 Jul 2025 06:24:50 GMT
            Etag: W/"56-OT40RUCdZvEp6BP0N6XYWZMf2dQ"
            Keep-Alive: timeout=5
            X-Powered-By: Express
        body: '{"success":true,"message":"User deleted successfully","id":"686521d38d65ad9b4738c97a"}'
        status_message: 200 OK
        proto_major: 0
        proto_minor: 0
        timestamp: 2025-07-04T11:54:50.116692+05:30
    created: 1751610290
    mongorequests: []
    mongoresponses: []
    postgresrequests: []
    postgresresponses: []
    grpcreq: null
    grpcresp: null
    mysqlrequests: []
    mysqlresponses: []
    reqtimestampmock: 2025-07-04T11:54:50.116692+05:30
    restimestampmock: 2025-07-04T11:54:50.116692+05:30
testmodeinfo:
    id: 0
    isfiltered: false
    sortorder: 0
connectionid: ""
---
version: api.keploy.io/v1beta1
name: mocks
kind: Http
spec:
    metadata:
        name: Http
        operation: OPTIONS
        type: HTTP_CLIENT
    genericrequests: []
    genericresponses: []
    redisrequests: []
    redisresponses: []
    httpreq:
        method: OPTIONS
        proto_major: 1
        proto_minor: 1
        url: /add
        header:
            Accept: '*/*'
            Accept-Encoding: gzip, deflate, br, zstd
            Access-Control-Request-Headers: content-type
            Access-Control-Request-Method: POST
            Connection: keep-alive
            Origin: http://localhost:5173
            Referer: http://localhost:5173/
            Sec-Fetch-Dest: empty
            Sec-Fetch-Mode: cors
            Sec-Fetch-Site: same-site
            User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) HeadlessChrome/138.0.7204.23 Safari/537.36
        body: ""
        timestamp: 2025-07-04T11:54:52.110309+05:30
    httpresp:
        status_code: 204
        header:
            Access-Control-Allow-Headers: content-type
            Access-Control-Allow-Methods: GET,HEAD,PUT,PATCH,POST,DELETE
            Access-Control-Allow-Origin: '*'
            Connection: keep-alive
            Content-Length: "0"
            Date: Fri, 04 Jul 2025 06:24:52 GMT
            Keep-Alive: timeout=5
            Vary: Access-Control-Request-Headers
            X-Powered-By: Express
        body: ""
        status_message: 204 No Content
        proto_major: 0
        proto_minor: 0
        timestamp: 2025-07-04T11:54:52.110309+05:30
    created: 1751610292
    mongorequests: []
    mongoresponses: []
    postgresrequests: []
    postgresresponses: []
    grpcreq: null
    grpcresp: null
    mysqlrequests: []
    mysqlresponses: []
    reqtimestampmock: 2025-07-04T11:54:52.110309+05:30
    restimestampmock: 2025-07-04T11:54:52.110309+05:30
testmodeinfo:
    id: 0
    isfiltered: false
    sortorder: 0
connectionid: ""
---
version: api.keploy.io/v1beta1
name: mocks
kind: Http
spec:
    metadata:
        name: Http
        operation: POST
        type: HTTP_CLIENT
    genericrequests: []
    genericresponses: []
    redisrequests: []
    redisresponses: []
    httpreq:
        method: POST
        proto_major: 1
        proto_minor: 1
        url: /add
        header:
            Accept: application/json, text/plain, */*
            Accept-Encoding: gzip, deflate, br, zstd
            Accept-Language: en-US
            Connection: keep-alive
            Content-Length: "102"
            Content-Type: application/json
            Origin: http://localhost:5173
            Referer: http://localhost:5173/
            Sec-Ch-Ua: '"Not)A;Brand";v="8", "Chromium";v="138", "HeadlessChrome";v="138"'
            Sec-Ch-Ua-Mobile: ?0
            Sec-Ch-Ua-Platform: '"macOS"'
            Sec-Fetch-Dest: empty
            Sec-Fetch-Mode: cors
            Sec-Fetch-Site: same-site
            User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) HeadlessChrome/138.0.7204.23 Safari/537.36
        body: ""
        timestamp: 2025-07-04T11:54:52.46015+05:30
    httpresp:
        status_code: 200
        header:
            Access-Control-Allow-Origin: '*'
            Connection: keep-alive
            Content-Length: "162"
            Content-Type: application/json; charset=utf-8
            Date: Fri, 04 Jul 2025 06:24:52 GMT
            Etag: W/"a2-GyoDkeDSGS9C4JwfkX5hOiLn/1k"
            Keep-Alive: timeout=5
            X-Powered-By: Express
        body: '{"success":true,"message":"User added successfully","data":{"name":"Flow Test User 1751610291960","githubUsername":"flowtest123","YourQuote":"Testing full flow"}}'
        status_message: 200 OK
        proto_major: 0
        proto_minor: 0
        timestamp: 2025-07-04T11:54:52.460151+05:30
    created: 1751610292
    mongorequests: []
    mongoresponses: []
    postgresrequests: []
    postgresresponses: []
    grpcreq: null
    grpcresp: null
    mysqlrequests: []
    mysqlresponses: []
    reqtimestampmock: 2025-07-04T11:54:52.460151+05:30
    restimestampmock: 2025-07-04T11:54:52.460151+05:30
testmodeinfo:
    id: 0
    isfiltered: false
    sortorder: 0
connectionid: ""
---
version: api.keploy.io/v1beta1
name: mocks
kind: Http
spec:
    metadata:
        name: Http
        operation: GET
        type: HTTP_CLIENT
    genericrequests: []
    genericresponses: []
    redisrequests: []
    redisresponses: []
    httpreq:
        method: GET
        proto_major: 1
        proto_minor: 1
        url: /read
        header:
            Accept: application/json, text/plain, */*
            Accept-Encoding: gzip, deflate, br, zstd
            Accept-Language: en-US
            Connection: keep-alive
            Origin: http://localhost:5173
            Referer: http://localhost:5173/
            Sec-Ch-Ua: '"Not)A;Brand";v="8", "Chromium";v="138", "HeadlessChrome";v="138"'
            Sec-Ch-Ua-Mobile: ?0
            Sec-Ch-Ua-Platform: '"macOS"'
            Sec-Fetch-Dest: empty
            Sec-Fetch-Mode: cors
            Sec-Fetch-Site: same-site
            User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) HeadlessChrome/138.0.7204.23 Safari/537.36
        body: ""
        timestamp: 2025-07-04T11:54:52.808286+05:30
    httpresp:
        status_code: 200
        header:
            Access-Control-Allow-Origin: '*'
            Connection: keep-alive
            Content-Length: "1872"
            Content-Type: application/json; charset=utf-8
            Date: Fri, 04 Jul 2025 06:24:52 GMT
            Etag: W/"750-x1ZvbwkhaO7vSfJWd4z8CWBjOjI"
            Keep-Alive: timeout=5
            X-Powered-By: Express
        body: '{"success":true,"message":"Users fetched successfully","data":[{"_id":"686629b457a8f15b1a559034","name":"Test User","githubUsername":"testuser123","YourQuote":"This is a test quote","__v":0},{"_id":"68662a51a3c969d8f3dfb455","name":"Test User","githubUsername":"testuser123","YourQuote":"This is a test quote","__v":0},{"_id":"6866b2a492c74e969dd16cdb","name":"Test User","githubUsername":"testuser123","YourQuote":"This is a test quote","__v":0},{"_id":"6866b322ed73c5f3fe9c138f","name":"Test User","githubUsername":"testuser123","YourQuote":"This is a test quote","__v":0},{"_id":"6866b4625de3c569f15aafc2","name":"Test User","githubUsername":"testuser123","YourQuote":"This is a test quote","__v":0},{"_id":"6866badae460875eb7eb81c3","name":"Test User","githubUsername":"testuser123","YourQuote":"This is a test quote","__v":0},{"_id":"6866c09a35ff623c3181af64","name":"Test User","githubUsername":"testuser123","YourQuote":"This is a test quote","__v":0},{"_id":"6866c368d56166fe3069416a","name":"Test User","githubUsername":"testuser123","YourQuote":"This is a test quote","__v":0},{"_id":"6866c9fe53c7249f7a97b2ed","name":"Test User","githubUsername":"testuser123","YourQuote":"This is a test quote","__v":0},{"_id":"686767e5a301982f1d8c7cc9","name":"Test User","githubUsername":"testuser123","YourQuote":"This is a test quote","__v":0},{"_id":"68676b3759bb64a65220b39b","name":"Test User","githubUsername":"testuser123","YourQuote":"This is a test quote","__v":0},{"_id":"68676dab20c4ea6d0b39e3ba","name":"Test User","githubUsername":"testuser123","YourQuote":"This is a test quote","__v":0},{"_id":"686773ab676b8c8532ae2da3","name":"Test User","githubUsername":"testuser123","YourQuote":"This is a test quote","__v":0},{"_id":"686773b4676b8c8532ae2dad","name":"Flow Test User 1751610291960","githubUsername":"flowtest123","YourQuote":"Testing full flow","__v":0}]}'
        status_message: 200 OK
        proto_major: 0
        proto_minor: 0
        timestamp: 2025-07-04T11:54:52.808288+05:30
    created: 1751610292
    mongorequests: []
    mongoresponses: []
    postgresrequests: []
    postgresresponses: []
    grpcreq: null
    grpcresp: null
    mysqlrequests: []
    mysqlresponses: []
    reqtimestampmock: 2025-07-04T11:54:52.808288+05:30
    restimestampmock: 2025-07-04T11:54:52.808288+05:30
testmodeinfo:
    id: 0
    isfiltered: false
    sortorder: 0
connectionid: ""
---
version: api.keploy.io/v1beta1
name: mocks
kind: Http
spec:
    metadata:
        name: Http
        operation: GET
        type: HTTP_CLIENT
    genericrequests: []
    genericresponses: []
    redisrequests: []
    redisresponses: []
    httpreq:
        method: GET
        proto_major: 1
        proto_minor: 1
        url: /edit/686773b4676b8c8532ae2dad
        header:
            Accept: application/json, text/plain, */*
            Accept-Encoding: gzip, deflate, br, zstd
            Accept-Language: en-US
            Connection: keep-alive
            Origin: http://localhost:5173
            Referer: http://localhost:5173/
            Sec-Ch-Ua: '"Not)A;Brand";v="8", "Chromium";v="138", "HeadlessChrome";v="138"'
            Sec-Ch-Ua-Mobile: ?0
            Sec-Ch-Ua-Platform: '"macOS"'
            Sec-Fetch-Dest: empty
            Sec-Fetch-Mode: cors
            Sec-Fetch-Site: same-site
            User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) HeadlessChrome/138.0.7204.23 Safari/537.36
        body: ""
        timestamp: 2025-07-04T11:54:53.200235+05:30
    httpresp:
        status_code: 200
        header:
            Access-Control-Allow-Origin: '*'
            Connection: keep-alive
            Content-Length: "203"
            Content-Type: application/json; charset=utf-8
            Date: Fri, 04 Jul 2025 06:24:53 GMT
            Etag: W/"cb-Oq3Kn0A1cLLNslSbpyEwbkTb9ko"
            Keep-Alive: timeout=5
            X-Powered-By: Express
        body: '{"success":true,"message":"User found successfully","data":{"_id":"686773b4676b8c8532ae2dad","name":"Flow Test User 1751610291960","githubUsername":"flowtest123","YourQuote":"Testing full flow","__v":0}}'
        status_message: 200 OK
        proto_major: 0
        proto_minor: 0
        timestamp: 2025-07-04T11:54:53.200237+05:30
    created: 1751610293
    mongorequests: []
    mongoresponses: []
    postgresrequests: []
    postgresresponses: []
    grpcreq: null
    grpcresp: null
    mysqlrequests: []
    mysqlresponses: []
    reqtimestampmock: 2025-07-04T11:54:53.200237+05:30
    restimestampmock: 2025-07-04T11:54:53.200238+05:30
testmodeinfo:
    id: 0
    isfiltered: false
    sortorder: 0
connectionid: ""
---
version: api.keploy.io/v1beta1
name: mocks
kind: Http
spec:
    metadata:
        name: Http
        operation: OPTIONS
        type: HTTP_CLIENT
    genericrequests: []
    genericresponses: []
    redisrequests: []
    redisresponses: []
    httpreq:
        method: OPTIONS
        proto_major: 1
        proto_minor: 1
        url: /edit/686773b4676b8c8532ae2dad
        header:
            Accept: '*/*'
            Accept-Encoding: gzip, deflate, br, zstd
            Access-Control-Request-Headers: content-type
            Access-Control-Request-Method: POST
            Connection: keep-alive
            Origin: http://localhost:5173
            Referer: http://localhost:5173/
            Sec-Fetch-Dest: empty
            Sec-Fetch-Mode: cors
            Sec-Fetch-Site: same-site
            User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) HeadlessChrome/138.0.7204.23 Safari/537.36
        body: ""
        timestamp: 2025-07-04T11:54:53.275751+05:30
    httpresp:
        status_code: 204
        header:
            Access-Control-Allow-Headers: content-type
            Access-Control-Allow-Methods: GET,HEAD,PUT,PATCH,POST,DELETE
            Access-Control-Allow-Origin: '*'
            Connection: keep-alive
            Content-Length: "0"
            Date: Fri, 04 Jul 2025 06:24:53 GMT
            Keep-Alive: timeout=5
            Vary: Access-Control-Request-Headers
            X-Powered-By: Express
        body: ""
        status_message: 204 No Content
        proto_major: 0
        proto_minor: 0
        timestamp: 2025-07-04T11:54:53.275752+05:30
    created: 1751610293
    mongorequests: []
    mongoresponses: []
    postgresrequests: []
    postgresresponses: []
    grpcreq: null
    grpcresp: null
    mysqlrequests: []
    mysqlresponses: []
    reqtimestampmock: 2025-07-04T11:54:53.275752+05:30
    restimestampmock: 2025-07-04T11:54:53.275752+05:30
testmodeinfo:
    id: 0
    isfiltered: false
    sortorder: 0
connectionid: ""
---
version: api.keploy.io/v1beta1
name: mocks
kind: Http
spec:
    metadata:
        name: Http
        operation: POST
        type: HTTP_CLIENT
    genericrequests: []
    genericresponses: []
    redisrequests: []
    redisresponses: []
    httpreq:
        method: POST
        proto_major: 1
        proto_minor: 1
        url: /edit/686773b4676b8c8532ae2dad
        header:
            Accept: application/json, text/plain, */*
            Accept-Encoding: gzip, deflate, br, zstd
            Accept-Language: en-US
            Connection: keep-alive
            Content-Length: "151"
            Content-Type: application/json
            Origin: http://localhost:5173
            Referer: http://localhost:5173/
            Sec-Ch-Ua: '"Not)A;Brand";v="8", "Chromium";v="138", "HeadlessChrome";v="138"'
            Sec-Ch-Ua-Mobile: ?0
            Sec-Ch-Ua-Platform: '"macOS"'
            Sec-Fetch-Dest: empty
            Sec-Fetch-Mode: cors
            Sec-Fetch-Site: same-site
            User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) HeadlessChrome/138.0.7204.23 Safari/537.36
        body: ""
        timestamp: 2025-07-04T11:54:53.633311+05:30
    httpresp:
        status_code: 200
        header:
            Access-Control-Allow-Origin: '*'
            Connection: keep-alive
            Content-Length: "205"
            Content-Type: application/json; charset=utf-8
            Date: Fri, 04 Jul 2025 06:24:53 GMT
            Etag: W/"cd-LFCYkgtHKDw0AyZRw5p2a0QXTrI"
            Keep-Alive: timeout=5
            X-Powered-By: Express
        body: '{"success":true,"message":"User updated successfully","data":{"_id":"686773b4676b8c8532ae2dad","name":"Flow Test User 1751610291960","githubUsername":"flowtest123","YourQuote":"Testing full flow","__v":0}}'
        status_message: 200 OK
        proto_major: 0
        proto_minor: 0
        timestamp: 2025-07-04T11:54:53.633314+05:30
    created: 1751610293
    mongorequests: []
    mongoresponses: []
    postgresrequests: []
    postgresresponses: []
    grpcreq: null
    grpcresp: null
    mysqlrequests: []
    mysqlresponses: []
    reqtimestampmock: 2025-07-04T11:54:53.633314+05:30
    restimestampmock: 2025-07-04T11:54:53.633314+05:30
testmodeinfo:
    id: 0
    isfiltered: false
    sortorder: 0
connectionid: ""
---
version: api.keploy.io/v1beta1
name: mocks
kind: Http
spec:
    metadata:
        name: Http
        operation: GET
        type: HTTP_CLIENT
    genericrequests: []
    genericresponses: []
    redisrequests: []
    redisresponses: []
    httpreq:
        method: GET
        proto_major: 1
        proto_minor: 1
        url: /read
        header:
            Accept: application/json, text/plain, */*
            Accept-Encoding: gzip, deflate, br, zstd
            Accept-Language: en-US
            Connection: keep-alive
            Origin: http://localhost:5173
            Referer: http://localhost:5173/
            Sec-Ch-Ua: '"Not)A;Brand";v="8", "Chromium";v="138", "HeadlessChrome";v="138"'
            Sec-Ch-Ua-Mobile: ?0
            Sec-Ch-Ua-Platform: '"macOS"'
            Sec-Fetch-Dest: empty
            Sec-Fetch-Mode: cors
            Sec-Fetch-Site: same-site
            User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) HeadlessChrome/138.0.7204.23 Safari/537.36
        body: ""
        timestamp: 2025-07-04T11:54:54.627011+05:30
    httpresp:
        status_code: 200
        header:
            Access-Control-Allow-Origin: '*'
            Connection: keep-alive
            Content-Length: "1880"
            Content-Type: application/json; charset=utf-8
            Date: Fri, 04 Jul 2025 06:24:54 GMT
            Etag: W/"758-2oHZOFfoZkx+SFKovHNhWX9+Llk"
            Keep-Alive: timeout=5
            X-Powered-By: Express
        body: '{"success":true,"message":"Users fetched successfully","data":[{"_id":"686629b457a8f15b1a559034","name":"Test User","githubUsername":"testuser123","YourQuote":"This is a test quote","__v":0},{"_id":"68662a51a3c969d8f3dfb455","name":"Test User","githubUsername":"testuser123","YourQuote":"This is a test quote","__v":0},{"_id":"6866b2a492c74e969dd16cdb","name":"Test User","githubUsername":"testuser123","YourQuote":"This is a test quote","__v":0},{"_id":"6866b322ed73c5f3fe9c138f","name":"Test User","githubUsername":"testuser123","YourQuote":"This is a test quote","__v":0},{"_id":"6866b4625de3c569f15aafc2","name":"Test User","githubUsername":"testuser123","YourQuote":"This is a test quote","__v":0},{"_id":"6866badae460875eb7eb81c3","name":"Test User","githubUsername":"testuser123","YourQuote":"This is a test quote","__v":0},{"_id":"6866c09a35ff623c3181af64","name":"Test User","githubUsername":"testuser123","YourQuote":"This is a test quote","__v":0},{"_id":"6866c368d56166fe3069416a","name":"Test User","githubUsername":"testuser123","YourQuote":"This is a test quote","__v":0},{"_id":"6866c9fe53c7249f7a97b2ed","name":"Test User","githubUsername":"testuser123","YourQuote":"This is a test quote","__v":0},{"_id":"686767e5a301982f1d8c7cc9","name":"Test User","githubUsername":"testuser123","YourQuote":"This is a test quote","__v":0},{"_id":"68676b3759bb64a65220b39b","name":"Test User","githubUsername":"testuser123","YourQuote":"This is a test quote","__v":0},{"_id":"68676dab20c4ea6d0b39e3ba","name":"Test User","githubUsername":"testuser123","YourQuote":"This is a test quote","__v":0},{"_id":"686773ab676b8c8532ae2da3","name":"Test User","githubUsername":"testuser123","YourQuote":"This is a test quote","__v":0},{"_id":"686773b4676b8c8532ae2dad","name":"Flow Test User 1751610291960 Updated","githubUsername":"flowtest123","YourQuote":"Testing full flow","__v":0}]}'
        status_message: 200 OK
        proto_major: 0
        proto_minor: 0
        timestamp: 2025-07-04T11:54:54.627012+05:30
    created: 1751610294
    mongorequests: []
    mongoresponses: []
    postgresrequests: []
    postgresresponses: []
    grpcreq: null
    grpcresp: null
    mysqlrequests: []
    mysqlresponses: []
    reqtimestampmock: 2025-07-04T11:54:54.627012+05:30
    restimestampmock: 2025-07-04T11:54:54.627012+05:30
testmodeinfo:
    id: 0
    isfiltered: false
    sortorder: 0
connectionid: ""
---
version: api.keploy.io/v1beta1
name: mocks
kind: Http
spec:
    metadata:
        name: Http
        operation: OPTIONS
        type: HTTP_CLIENT
    genericrequests: []
    genericresponses: []
    redisrequests: []
    redisresponses: []
    httpreq:
        method: OPTIONS
        proto_major: 1
        proto_minor: 1
        url: /delete
        header:
            Accept: '*/*'
            Accept-Encoding: gzip, deflate, br, zstd
            Access-Control-Request-Headers: content-type
            Access-Control-Request-Method: POST
            Connection: keep-alive
            Origin: http://localhost:5173
            Referer: http://localhost:5173/
            Sec-Fetch-Dest: empty
            Sec-Fetch-Mode: cors
            Sec-Fetch-Site: same-site
            User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) HeadlessChrome/138.0.7204.23 Safari/537.36
        body: ""
        timestamp: 2025-07-04T11:54:55.182012+05:30
    httpresp:
        status_code: 204
        header:
            Access-Control-Allow-Headers: content-type
            Access-Control-Allow-Methods: GET,HEAD,PUT,PATCH,POST,DELETE
            Access-Control-Allow-Origin: '*'
            Connection: keep-alive
            Content-Length: "0"
            Date: Fri, 04 Jul 2025 06:24:55 GMT
            Keep-Alive: timeout=5
            Vary: Access-Control-Request-Headers
            X-Powered-By: Express
        body: ""
        status_message: 204 No Content
        proto_major: 0
        proto_minor: 0
        timestamp: 2025-07-04T11:54:55.182014+05:30
    created: 1751610295
    mongorequests: []
    mongoresponses: []
    postgresrequests: []
    postgresresponses: []
    grpcreq: null
    grpcresp: null
    mysqlrequests: []
    mysqlresponses: []
    reqtimestampmock: 2025-07-04T11:54:55.182014+05:30
    restimestampmock: 2025-07-04T11:54:55.182014+05:30
testmodeinfo:
    id: 0
    isfiltered: false
    sortorder: 0
connectionid: ""
---
version: api.keploy.io/v1beta1
name: mocks
kind: Http
spec:
    metadata:
        name: Http
        operation: POST
        type: HTTP_CLIENT
    genericrequests: []
    genericresponses: []
    redisrequests: []
    redisresponses: []
    httpreq:
        method: POST
        proto_major: 1
        proto_minor: 1
        url: /delete
        header:
            Accept: application/json, text/plain, */*
            Accept-Encoding: gzip, deflate, br, zstd
            Accept-Language: en-US
            Connection: keep-alive
            Content-Length: "33"
            Content-Type: application/json
            Origin: http://localhost:5173
            Referer: http://localhost:5173/
            Sec-Ch-Ua: '"Not)A;Brand";v="8", "Chromium";v="138", "HeadlessChrome";v="138"'
            Sec-Ch-Ua-Mobile: ?0
            Sec-Ch-Ua-Platform: '"macOS"'
            Sec-Fetch-Dest: empty
            Sec-Fetch-Mode: cors
            Sec-Fetch-Site: same-site
            User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) HeadlessChrome/138.0.7204.23 Safari/537.36
        body: ""
        timestamp: 2025-07-04T11:54:55.534262+05:30
    httpresp:
        status_code: 200
        header:
            Access-Control-Allow-Origin: '*'
            Connection: keep-alive
            Content-Length: "86"
            Content-Type: application/json; charset=utf-8
            Date: Fri, 04 Jul 2025 06:24:55 GMT
            Etag: W/"56-LeAzYe3SzlZKONj/h7zUhFyzgf8"
            Keep-Alive: timeout=5
            X-Powered-By: Express
        body: '{"success":true,"message":"User deleted successfully","id":"686773b4676b8c8532ae2dad"}'
        status_message: 200 OK
        proto_major: 0
        proto_minor: 0
        timestamp: 2025-07-04T11:54:55.534264+05:30
    created: 1751610295
    mongorequests: []
    mongoresponses: []
    postgresrequests: []
    postgresresponses: []
    grpcreq: null
    grpcresp: null
    mysqlrequests: []
    mysqlresponses: []
    reqtimestampmock: 2025-07-04T11:54:55.534264+05:30
    restimestampmock: 2025-07-04T11:54:55.534264+05:30
testmodeinfo:
    id: 0
    isfiltered: false
    sortorder: 0
connectionid: ""
---
version: api.keploy.io/v1beta1
name: mocks
kind: Http
spec:
    metadata:
        name: Http
        operation: GET
        type: HTTP_CLIENT
    genericrequests: []
    genericresponses: []
    redisrequests: []
    redisresponses: []
    httpreq:
        method: GET
        proto_major: 1
        proto_minor: 1
        url: /read
        header:
            Accept: application/json, text/plain, */*
            Accept-Encoding: gzip, deflate, br, zstd
            Accept-Language: en-US
            Connection: keep-alive
            Origin: http://localhost:5173
            Referer: http://localhost:5173/
            Sec-Ch-Ua: '"Not)A;Brand";v="8", "Chromium";v="138", "HeadlessChrome";v="138"'
            Sec-Ch-Ua-Mobile: ?0
            Sec-Ch-Ua-Platform: '"macOS"'
            Sec-Fetch-Dest: empty
            Sec-Fetch-Mode: cors
            Sec-Fetch-Site: same-site
            User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) HeadlessChrome/138.0.7204.23 Safari/537.36
        body: ""
        timestamp: 2025-07-04T11:54:57.550576+05:30
    httpresp:
        status_code: 200
        header:
            Access-Control-Allow-Origin: '*'
            Connection: keep-alive
            Content-Length: "1728"
            Content-Type: application/json; charset=utf-8
            Date: Fri, 04 Jul 2025 06:24:57 GMT
            Etag: W/"6c0-twIFOM2mNikrSj+cEpZSZKvqr8g"
            Keep-Alive: timeout=5
            X-Powered-By: Express
        body: '{"success":true,"message":"Users fetched successfully","data":[{"_id":"686629b457a8f15b1a559034","name":"Test User","githubUsername":"testuser123","YourQuote":"This is a test quote","__v":0},{"_id":"68662a51a3c969d8f3dfb455","name":"Test User","githubUsername":"testuser123","YourQuote":"This is a test quote","__v":0},{"_id":"6866b2a492c74e969dd16cdb","name":"Test User","githubUsername":"testuser123","YourQuote":"This is a test quote","__v":0},{"_id":"6866b322ed73c5f3fe9c138f","name":"Test User","githubUsername":"testuser123","YourQuote":"This is a test quote","__v":0},{"_id":"6866b4625de3c569f15aafc2","name":"Test User","githubUsername":"testuser123","YourQuote":"This is a test quote","__v":0},{"_id":"6866badae460875eb7eb81c3","name":"Test User","githubUsername":"testuser123","YourQuote":"This is a test quote","__v":0},{"_id":"6866c09a35ff623c3181af64","name":"Test User","githubUsername":"testuser123","YourQuote":"This is a test quote","__v":0},{"_id":"6866c368d56166fe3069416a","name":"Test User","githubUsername":"testuser123","YourQuote":"This is a test quote","__v":0},{"_id":"6866c9fe53c7249f7a97b2ed","name":"Test User","githubUsername":"testuser123","YourQuote":"This is a test quote","__v":0},{"_id":"686767e5a301982f1d8c7cc9","name":"Test User","githubUsername":"testuser123","YourQuote":"This is a test quote","__v":0},{"_id":"68676b3759bb64a65220b39b","name":"Test User","githubUsername":"testuser123","YourQuote":"This is a test quote","__v":0},{"_id":"68676dab20c4ea6d0b39e3ba","name":"Test User","githubUsername":"testuser123","YourQuote":"This is a test quote","__v":0},{"_id":"686773ab676b8c8532ae2da3","name":"Test User","githubUsername":"testuser123","YourQuote":"This is a test quote","__v":0}]}'
        status_message: 200 OK
        proto_major: 0
        proto_minor: 0
        timestamp: 2025-07-04T11:54:57.550577+05:30
    created: 1751610297
    mongorequests: []
    mongoresponses: []
    postgresrequests: []
    postgresresponses: []
    grpcreq: null
    grpcresp: null
    mysqlrequests: []
    mysqlresponses: []
    reqtimestampmock: 2025-07-04T11:54:57.550577+05:30
    restimestampmock: 2025-07-04T11:54:57.550578+05:30
testmodeinfo:
    id: 0
    isfiltered: false
    sortorder: 0
connectionid: ""
