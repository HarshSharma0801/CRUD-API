version: api.keploy.io/v1beta1
name: mocks
kind: Http
spec:
    metadata:
        name: Http
        operation: OPTIONS
        type: HTTP_CLIENT
    genericrequests: []
    genericresponses: []
    redisrequests: []
    redisresponses: []
    httpreq:
        method: OPTIONS
        proto_major: 1
        proto_minor: 1
        url: /add
        header:
            Accept: '*/*'
            Accept-Encoding: gzip, deflate, br, zstd
            Access-Control-Request-Headers: content-type
            Access-Control-Request-Method: POST
            Connection: keep-alive
            Origin: http://localhost:5173
            Referer: http://localhost:5173/
            Sec-Fetch-Dest: empty
            Sec-Fetch-Mode: cors
            Sec-Fetch-Site: same-site
            User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) HeadlessChrome/138.0.7204.23 Safari/537.36
        body: ""
        timestamp: 2025-07-04T11:18:39.445496+05:30
    httpresp:
        status_code: 204
        header:
            Access-Control-Allow-Headers: content-type
            Access-Control-Allow-Methods: GET,HEAD,PUT,PATCH,POST,DELETE
            Access-Control-Allow-Origin: '*'
            Connection: keep-alive
            Content-Length: "0"
            Date: Fri, 04 Jul 2025 05:48:39 GMT
            Keep-Alive: timeout=5
            Vary: Access-Control-Request-Headers
            X-Powered-By: Express
        body: ""
        status_message: 204 No Content
        proto_major: 0
        proto_minor: 0
        timestamp: 2025-07-04T11:18:39.445497+05:30
    created: 1751608119
    mongorequests: []
    mongoresponses: []
    postgresrequests: []
    postgresresponses: []
    grpcreq: null
    grpcresp: null
    mysqlrequests: []
    mysqlresponses: []
    reqtimestampmock: 2025-07-04T11:18:39.445497+05:30
    restimestampmock: 2025-07-04T11:18:39.445497+05:30
testmodeinfo:
    id: 0
    isfiltered: false
    sortorder: 0
connectionid: ""
---
version: api.keploy.io/v1beta1
name: mocks
kind: Http
spec:
    metadata:
        name: Http
        operation: POST
        type: HTTP_CLIENT
    genericrequests: []
    genericresponses: []
    redisrequests: []
    redisresponses: []
    httpreq:
        method: POST
        proto_major: 1
        proto_minor: 1
        url: /add
        header:
            Accept: application/json, text/plain, */*
            Accept-Encoding: gzip, deflate, br, zstd
            Accept-Language: en-US
            Connection: keep-alive
            Content-Length: "86"
            Content-Type: application/json
            Origin: http://localhost:5173
            Referer: http://localhost:5173/
            Sec-Ch-Ua: '"Not)A;Brand";v="8", "Chromium";v="138", "HeadlessChrome";v="138"'
            Sec-Ch-Ua-Mobile: ?0
            Sec-Ch-Ua-Platform: '"macOS"'
            Sec-Fetch-Dest: empty
            Sec-Fetch-Mode: cors
            Sec-Fetch-Site: same-site
            User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) HeadlessChrome/138.0.7204.23 Safari/537.36
        body: ""
        timestamp: 2025-07-04T11:18:39.832696+05:30
    httpresp:
        status_code: 200
        header:
            Access-Control-Allow-Origin: '*'
            Connection: keep-alive
            Content-Length: "146"
            Content-Type: application/json; charset=utf-8
            Date: Fri, 04 Jul 2025 05:48:39 GMT
            Etag: W/"92-KnFQ7mb3IkJldeTep+J6v17TLJw"
            Keep-Alive: timeout=5
            X-Powered-By: Express
        body: '{"success":true,"message":"User added successfully","data":{"name":"Test User","githubUsername":"testuser123","YourQuote":"This is a test quote"}}'
        status_message: 200 OK
        proto_major: 0
        proto_minor: 0
        timestamp: 2025-07-04T11:18:39.832697+05:30
    created: 1751608119
    mongorequests: []
    mongoresponses: []
    postgresrequests: []
    postgresresponses: []
    grpcreq: null
    grpcresp: null
    mysqlrequests: []
    mysqlresponses: []
    reqtimestampmock: 2025-07-04T11:18:39.832697+05:30
    restimestampmock: 2025-07-04T11:18:39.832697+05:30
testmodeinfo:
    id: 0
    isfiltered: false
    sortorder: 0
connectionid: ""
---
version: api.keploy.io/v1beta1
name: mocks
kind: Http
spec:
    metadata:
        name: Http
        operation: GET
        type: HTTP_CLIENT
    genericrequests: []
    genericresponses: []
    redisrequests: []
    redisresponses: []
    httpreq:
        method: GET
        proto_major: 1
        proto_minor: 1
        url: /read
        header:
            Accept: application/json, text/plain, */*
            Accept-Encoding: gzip, deflate, br, zstd
            Accept-Language: en-US
            Connection: keep-alive
            Origin: http://localhost:5173
            Referer: http://localhost:5173/
            Sec-Ch-Ua: '"Not)A;Brand";v="8", "Chromium";v="138", "HeadlessChrome";v="138"'
            Sec-Ch-Ua-Mobile: ?0
            Sec-Ch-Ua-Platform: '"macOS"'
            Sec-Fetch-Dest: empty
            Sec-Fetch-Mode: cors
            Sec-Fetch-Site: same-site
            User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) HeadlessChrome/138.0.7204.23 Safari/537.36
        body: ""
        timestamp: 2025-07-04T11:18:40.221866+05:30
    httpresp:
        status_code: 200
        header:
            Access-Control-Allow-Origin: '*'
            Connection: keep-alive
            Content-Length: "1797"
            Content-Type: application/json; charset=utf-8
            Date: Fri, 04 Jul 2025 05:48:40 GMT
            Etag: W/"705-ZdRkna2oHSffoBODjjnRCfOjD9s"
            Keep-Alive: timeout=5
            X-Powered-By: Express
        body: '{"success":true,"message":"Users fetched successfully","data":[{"_id":"6865036ec2485000aa8993eb","name":"Ada Lovelace","githubUsername":"adalab","YourQuote":"I span worlds","__v":0},{"_id":"68650c19aca7333ce70db094","name":"tom","githubUsername":"Just","YourQuote":"see","__v":0},{"_id":"686521d38d65ad9b4738c97a","name":"Harsh","githubUsername":"None","YourQuote":"Happy World","__v":0},{"_id":"686629b457a8f15b1a559034","name":"Test User","githubUsername":"testuser123","YourQuote":"This is a test quote","__v":0},{"_id":"68662a51a3c969d8f3dfb455","name":"Test User","githubUsername":"testuser123","YourQuote":"This is a test quote","__v":0},{"_id":"6866b2a492c74e969dd16cdb","name":"Test User","githubUsername":"testuser123","YourQuote":"This is a test quote","__v":0},{"_id":"6866b322ed73c5f3fe9c138f","name":"Test User","githubUsername":"testuser123","YourQuote":"This is a test quote","__v":0},{"_id":"6866b4625de3c569f15aafc2","name":"Test User","githubUsername":"testuser123","YourQuote":"This is a test quote","__v":0},{"_id":"6866badae460875eb7eb81c3","name":"Test User","githubUsername":"testuser123","YourQuote":"This is a test quote","__v":0},{"_id":"6866c09a35ff623c3181af64","name":"Test User","githubUsername":"testuser123","YourQuote":"This is a test quote","__v":0},{"_id":"6866c368d56166fe3069416a","name":"Test User","githubUsername":"testuser123","YourQuote":"This is a test quote","__v":0},{"_id":"6866c9fe53c7249f7a97b2ed","name":"Test User","githubUsername":"testuser123","YourQuote":"This is a test quote","__v":0},{"_id":"686767e5a301982f1d8c7cc9","name":"Test User","githubUsername":"testuser123","YourQuote":"This is a test quote","__v":0},{"_id":"68676b3759bb64a65220b39b","name":"Test User","githubUsername":"testuser123","YourQuote":"This is a test quote","__v":0}]}'
        status_message: 200 OK
        proto_major: 0
        proto_minor: 0
        timestamp: 2025-07-04T11:18:40.221867+05:30
    created: 1751608120
    mongorequests: []
    mongoresponses: []
    postgresrequests: []
    postgresresponses: []
    grpcreq: null
    grpcresp: null
    mysqlrequests: []
    mysqlresponses: []
    reqtimestampmock: 2025-07-04T11:18:40.221867+05:30
    restimestampmock: 2025-07-04T11:18:40.221867+05:30
testmodeinfo:
    id: 0
    isfiltered: false
    sortorder: 0
connectionid: ""
---
version: api.keploy.io/v1beta1
name: mocks
kind: Http
spec:
    metadata:
        name: Http
        operation: GET
        type: HTTP_CLIENT
    genericrequests: []
    genericresponses: []
    redisrequests: []
    redisresponses: []
    httpreq:
        method: GET
        proto_major: 1
        proto_minor: 1
        url: /read
        header:
            Accept: application/json, text/plain, */*
            Accept-Encoding: gzip, deflate, br, zstd
            Accept-Language: en-US
            Connection: keep-alive
            Origin: http://localhost:5173
            Referer: http://localhost:5173/
            Sec-Ch-Ua: '"Not)A;Brand";v="8", "Chromium";v="138", "HeadlessChrome";v="138"'
            Sec-Ch-Ua-Mobile: ?0
            Sec-Ch-Ua-Platform: '"macOS"'
            Sec-Fetch-Dest: empty
            Sec-Fetch-Mode: cors
            Sec-Fetch-Site: same-site
            User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) HeadlessChrome/138.0.7204.23 Safari/537.36
        body: ""
        timestamp: 2025-07-04T11:18:40.829975+05:30
    httpresp:
        status_code: 200
        header:
            Access-Control-Allow-Origin: '*'
            Connection: keep-alive
            Content-Length: "1797"
            Content-Type: application/json; charset=utf-8
            Date: Fri, 04 Jul 2025 05:48:40 GMT
            Etag: W/"705-ZdRkna2oHSffoBODjjnRCfOjD9s"
            Keep-Alive: timeout=5
            X-Powered-By: Express
        body: '{"success":true,"message":"Users fetched successfully","data":[{"_id":"6865036ec2485000aa8993eb","name":"Ada Lovelace","githubUsername":"adalab","YourQuote":"I span worlds","__v":0},{"_id":"68650c19aca7333ce70db094","name":"tom","githubUsername":"Just","YourQuote":"see","__v":0},{"_id":"686521d38d65ad9b4738c97a","name":"Harsh","githubUsername":"None","YourQuote":"Happy World","__v":0},{"_id":"686629b457a8f15b1a559034","name":"Test User","githubUsername":"testuser123","YourQuote":"This is a test quote","__v":0},{"_id":"68662a51a3c969d8f3dfb455","name":"Test User","githubUsername":"testuser123","YourQuote":"This is a test quote","__v":0},{"_id":"6866b2a492c74e969dd16cdb","name":"Test User","githubUsername":"testuser123","YourQuote":"This is a test quote","__v":0},{"_id":"6866b322ed73c5f3fe9c138f","name":"Test User","githubUsername":"testuser123","YourQuote":"This is a test quote","__v":0},{"_id":"6866b4625de3c569f15aafc2","name":"Test User","githubUsername":"testuser123","YourQuote":"This is a test quote","__v":0},{"_id":"6866badae460875eb7eb81c3","name":"Test User","githubUsername":"testuser123","YourQuote":"This is a test quote","__v":0},{"_id":"6866c09a35ff623c3181af64","name":"Test User","githubUsername":"testuser123","YourQuote":"This is a test quote","__v":0},{"_id":"6866c368d56166fe3069416a","name":"Test User","githubUsername":"testuser123","YourQuote":"This is a test quote","__v":0},{"_id":"6866c9fe53c7249f7a97b2ed","name":"Test User","githubUsername":"testuser123","YourQuote":"This is a test quote","__v":0},{"_id":"686767e5a301982f1d8c7cc9","name":"Test User","githubUsername":"testuser123","YourQuote":"This is a test quote","__v":0},{"_id":"68676b3759bb64a65220b39b","name":"Test User","githubUsername":"testuser123","YourQuote":"This is a test quote","__v":0}]}'
        status_message: 200 OK
        proto_major: 0
        proto_minor: 0
        timestamp: 2025-07-04T11:18:40.829976+05:30
    created: 1751608120
    mongorequests: []
    mongoresponses: []
    postgresrequests: []
    postgresresponses: []
    grpcreq: null
    grpcresp: null
    mysqlrequests: []
    mysqlresponses: []
    reqtimestampmock: 2025-07-04T11:18:40.829976+05:30
    restimestampmock: 2025-07-04T11:18:40.829976+05:30
testmodeinfo:
    id: 0
    isfiltered: false
    sortorder: 0
connectionid: ""
---
version: api.keploy.io/v1beta1
name: mocks
kind: Http
spec:
    metadata:
        name: Http
        operation: GET
        type: HTTP_CLIENT
    genericrequests: []
    genericresponses: []
    redisrequests: []
    redisresponses: []
    httpreq:
        method: GET
        proto_major: 1
        proto_minor: 1
        url: /read
        header:
            Accept: application/json, text/plain, */*
            Accept-Encoding: gzip, deflate, br, zstd
            Accept-Language: en-US
            Connection: keep-alive
            Origin: http://localhost:5173
            Referer: http://localhost:5173/
            Sec-Ch-Ua: '"Not)A;Brand";v="8", "Chromium";v="138", "HeadlessChrome";v="138"'
            Sec-Ch-Ua-Mobile: ?0
            Sec-Ch-Ua-Platform: '"macOS"'
            Sec-Fetch-Dest: empty
            Sec-Fetch-Mode: cors
            Sec-Fetch-Site: same-site
            User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) HeadlessChrome/138.0.7204.23 Safari/537.36
        body: ""
        timestamp: 2025-07-04T11:18:42.703661+05:30
    httpresp:
        status_code: 200
        header:
            Access-Control-Allow-Origin: '*'
            Connection: keep-alive
            Content-Length: "1797"
            Content-Type: application/json; charset=utf-8
            Date: Fri, 04 Jul 2025 05:48:42 GMT
            Etag: W/"705-ZdRkna2oHSffoBODjjnRCfOjD9s"
            Keep-Alive: timeout=5
            X-Powered-By: Express
        body: '{"success":true,"message":"Users fetched successfully","data":[{"_id":"6865036ec2485000aa8993eb","name":"Ada Lovelace","githubUsername":"adalab","YourQuote":"I span worlds","__v":0},{"_id":"68650c19aca7333ce70db094","name":"tom","githubUsername":"Just","YourQuote":"see","__v":0},{"_id":"686521d38d65ad9b4738c97a","name":"Harsh","githubUsername":"None","YourQuote":"Happy World","__v":0},{"_id":"686629b457a8f15b1a559034","name":"Test User","githubUsername":"testuser123","YourQuote":"This is a test quote","__v":0},{"_id":"68662a51a3c969d8f3dfb455","name":"Test User","githubUsername":"testuser123","YourQuote":"This is a test quote","__v":0},{"_id":"6866b2a492c74e969dd16cdb","name":"Test User","githubUsername":"testuser123","YourQuote":"This is a test quote","__v":0},{"_id":"6866b322ed73c5f3fe9c138f","name":"Test User","githubUsername":"testuser123","YourQuote":"This is a test quote","__v":0},{"_id":"6866b4625de3c569f15aafc2","name":"Test User","githubUsername":"testuser123","YourQuote":"This is a test quote","__v":0},{"_id":"6866badae460875eb7eb81c3","name":"Test User","githubUsername":"testuser123","YourQuote":"This is a test quote","__v":0},{"_id":"6866c09a35ff623c3181af64","name":"Test User","githubUsername":"testuser123","YourQuote":"This is a test quote","__v":0},{"_id":"6866c368d56166fe3069416a","name":"Test User","githubUsername":"testuser123","YourQuote":"This is a test quote","__v":0},{"_id":"6866c9fe53c7249f7a97b2ed","name":"Test User","githubUsername":"testuser123","YourQuote":"This is a test quote","__v":0},{"_id":"686767e5a301982f1d8c7cc9","name":"Test User","githubUsername":"testuser123","YourQuote":"This is a test quote","__v":0},{"_id":"68676b3759bb64a65220b39b","name":"Test User","githubUsername":"testuser123","YourQuote":"This is a test quote","__v":0}]}'
        status_message: 200 OK
        proto_major: 0
        proto_minor: 0
        timestamp: 2025-07-04T11:18:42.703662+05:30
    created: 1751608122
    mongorequests: []
    mongoresponses: []
    postgresrequests: []
    postgresresponses: []
    grpcreq: null
    grpcresp: null
    mysqlrequests: []
    mysqlresponses: []
    reqtimestampmock: 2025-07-04T11:18:42.703662+05:30
    restimestampmock: 2025-07-04T11:18:42.703662+05:30
testmodeinfo:
    id: 0
    isfiltered: false
    sortorder: 0
connectionid: ""
---
version: api.keploy.io/v1beta1
name: mocks
kind: Http
spec:
    metadata:
        name: Http
        operation: GET
        type: HTTP_CLIENT
    genericrequests: []
    genericresponses: []
    redisrequests: []
    redisresponses: []
    httpreq:
        method: GET
        proto_major: 1
        proto_minor: 1
        url: /edit/6865036ec2485000aa8993eb
        header:
            Accept: application/json, text/plain, */*
            Accept-Encoding: gzip, deflate, br, zstd
            Accept-Language: en-US
            Connection: keep-alive
            Origin: http://localhost:5173
            Referer: http://localhost:5173/
            Sec-Ch-Ua: '"Not)A;Brand";v="8", "Chromium";v="138", "HeadlessChrome";v="138"'
            Sec-Ch-Ua-Mobile: ?0
            Sec-Ch-Ua-Platform: '"macOS"'
            Sec-Fetch-Dest: empty
            Sec-Fetch-Mode: cors
            Sec-Fetch-Site: same-site
            User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) HeadlessChrome/138.0.7204.23 Safari/537.36
        body: ""
        timestamp: 2025-07-04T11:18:43.335892+05:30
    httpresp:
        status_code: 200
        header:
            Access-Control-Allow-Origin: '*'
            Connection: keep-alive
            Content-Length: "178"
            Content-Type: application/json; charset=utf-8
            Date: Fri, 04 Jul 2025 05:48:43 GMT
            Etag: W/"b2-iryyPTUVyGL29zBCxgWzLw5zcMY"
            Keep-Alive: timeout=5
            X-Powered-By: Express
        body: '{"success":true,"message":"User found successfully","data":{"_id":"6865036ec2485000aa8993eb","name":"Ada Lovelace","githubUsername":"adalab","YourQuote":"I span worlds","__v":0}}'
        status_message: 200 OK
        proto_major: 0
        proto_minor: 0
        timestamp: 2025-07-04T11:18:43.335893+05:30
    created: 1751608123
    mongorequests: []
    mongoresponses: []
    postgresrequests: []
    postgresresponses: []
    grpcreq: null
    grpcresp: null
    mysqlrequests: []
    mysqlresponses: []
    reqtimestampmock: 2025-07-04T11:18:43.335893+05:30
    restimestampmock: 2025-07-04T11:18:43.335893+05:30
testmodeinfo:
    id: 0
    isfiltered: false
    sortorder: 0
connectionid: ""
---
version: api.keploy.io/v1beta1
name: mocks
kind: Http
spec:
    metadata:
        name: Http
        operation: OPTIONS
        type: HTTP_CLIENT
    genericrequests: []
    genericresponses: []
    redisrequests: []
    redisresponses: []
    httpreq:
        method: OPTIONS
        proto_major: 1
        proto_minor: 1
        url: /edit/6865036ec2485000aa8993eb
        header:
            Accept: '*/*'
            Accept-Encoding: gzip, deflate, br, zstd
            Access-Control-Request-Headers: content-type
            Access-Control-Request-Method: POST
            Connection: keep-alive
            Origin: http://localhost:5173
            Referer: http://localhost:5173/
            Sec-Fetch-Dest: empty
            Sec-Fetch-Mode: cors
            Sec-Fetch-Site: same-site
            User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) HeadlessChrome/138.0.7204.23 Safari/537.36
        body: ""
        timestamp: 2025-07-04T11:18:43.416561+05:30
    httpresp:
        status_code: 204
        header:
            Access-Control-Allow-Headers: content-type
            Access-Control-Allow-Methods: GET,HEAD,PUT,PATCH,POST,DELETE
            Access-Control-Allow-Origin: '*'
            Connection: keep-alive
            Content-Length: "0"
            Date: Fri, 04 Jul 2025 05:48:43 GMT
            Keep-Alive: timeout=5
            Vary: Access-Control-Request-Headers
            X-Powered-By: Express
        body: ""
        status_message: 204 No Content
        proto_major: 0
        proto_minor: 0
        timestamp: 2025-07-04T11:18:43.416562+05:30
    created: 1751608123
    mongorequests: []
    mongoresponses: []
    postgresrequests: []
    postgresresponses: []
    grpcreq: null
    grpcresp: null
    mysqlrequests: []
    mysqlresponses: []
    reqtimestampmock: 2025-07-04T11:18:43.416562+05:30
    restimestampmock: 2025-07-04T11:18:43.416562+05:30
testmodeinfo:
    id: 0
    isfiltered: false
    sortorder: 0
connectionid: ""
---
version: api.keploy.io/v1beta1
name: mocks
kind: Http
spec:
    metadata:
        name: Http
        operation: POST
        type: HTTP_CLIENT
    genericrequests: []
    genericresponses: []
    redisrequests: []
    redisresponses: []
    httpreq:
        method: POST
        proto_major: 1
        proto_minor: 1
        url: /edit/6865036ec2485000aa8993eb
        header:
            Accept: application/json, text/plain, */*
            Accept-Encoding: gzip, deflate, br, zstd
            Accept-Language: en-US
            Connection: keep-alive
            Content-Length: "136"
            Content-Type: application/json
            Origin: http://localhost:5173
            Referer: http://localhost:5173/
            Sec-Ch-Ua: '"Not)A;Brand";v="8", "Chromium";v="138", "HeadlessChrome";v="138"'
            Sec-Ch-Ua-Mobile: ?0
            Sec-Ch-Ua-Platform: '"macOS"'
            Sec-Fetch-Dest: empty
            Sec-Fetch-Mode: cors
            Sec-Fetch-Site: same-site
            User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) HeadlessChrome/138.0.7204.23 Safari/537.36
        body: ""
        timestamp: 2025-07-04T11:18:43.77135+05:30
    httpresp:
        status_code: 200
        header:
            Access-Control-Allow-Origin: '*'
            Connection: keep-alive
            Content-Length: "180"
            Content-Type: application/json; charset=utf-8
            Date: Fri, 04 Jul 2025 05:48:43 GMT
            Etag: W/"b4-dmAGiOOEvaMOwmn71n3q1DT/pH4"
            Keep-Alive: timeout=5
            X-Powered-By: Express
        body: '{"success":true,"message":"User updated successfully","data":{"_id":"6865036ec2485000aa8993eb","name":"Ada Lovelace","githubUsername":"adalab","YourQuote":"I span worlds","__v":0}}'
        status_message: 200 OK
        proto_major: 0
        proto_minor: 0
        timestamp: 2025-07-04T11:18:43.771353+05:30
    created: 1751608123
    mongorequests: []
    mongoresponses: []
    postgresrequests: []
    postgresresponses: []
    grpcreq: null
    grpcresp: null
    mysqlrequests: []
    mysqlresponses: []
    reqtimestampmock: 2025-07-04T11:18:43.771354+05:30
    restimestampmock: 2025-07-04T11:18:43.771354+05:30
testmodeinfo:
    id: 0
    isfiltered: false
    sortorder: 0
connectionid: ""
---
version: api.keploy.io/v1beta1
name: mocks
kind: Http
spec:
    metadata:
        name: Http
        operation: GET
        type: HTTP_CLIENT
    genericrequests: []
    genericresponses: []
    redisrequests: []
    redisresponses: []
    httpreq:
        method: GET
        proto_major: 1
        proto_minor: 1
        url: /read
        header:
            Accept: application/json, text/plain, */*
            Accept-Encoding: gzip, deflate, br, zstd
            Accept-Language: en-US
            Connection: keep-alive
            Origin: http://localhost:5173
            Referer: http://localhost:5173/
            Sec-Ch-Ua: '"Not)A;Brand";v="8", "Chromium";v="138", "HeadlessChrome";v="138"'
            Sec-Ch-Ua-Mobile: ?0
            Sec-Ch-Ua-Platform: '"macOS"'
            Sec-Fetch-Dest: empty
            Sec-Fetch-Mode: cors
            Sec-Fetch-Site: same-site
            User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) HeadlessChrome/138.0.7204.23 Safari/537.36
        body: ""
        timestamp: 2025-07-04T11:18:44.768634+05:30
    httpresp:
        status_code: 200
        header:
            Access-Control-Allow-Origin: '*'
            Connection: keep-alive
            Content-Length: "1815"
            Content-Type: application/json; charset=utf-8
            Date: Fri, 04 Jul 2025 05:48:44 GMT
            Etag: W/"717-n6sDMZSxZhhzB51oyB7zsneojBc"
            Keep-Alive: timeout=5
            X-Powered-By: Express
        body: '{"success":true,"message":"Users fetched successfully","data":[{"_id":"6865036ec2485000aa8993eb","name":"Updated Test User","githubUsername":"updateduser123","YourQuote":"Updated test quote","__v":0},{"_id":"68650c19aca7333ce70db094","name":"tom","githubUsername":"Just","YourQuote":"see","__v":0},{"_id":"686521d38d65ad9b4738c97a","name":"Harsh","githubUsername":"None","YourQuote":"Happy World","__v":0},{"_id":"686629b457a8f15b1a559034","name":"Test User","githubUsername":"testuser123","YourQuote":"This is a test quote","__v":0},{"_id":"68662a51a3c969d8f3dfb455","name":"Test User","githubUsername":"testuser123","YourQuote":"This is a test quote","__v":0},{"_id":"6866b2a492c74e969dd16cdb","name":"Test User","githubUsername":"testuser123","YourQuote":"This is a test quote","__v":0},{"_id":"6866b322ed73c5f3fe9c138f","name":"Test User","githubUsername":"testuser123","YourQuote":"This is a test quote","__v":0},{"_id":"6866b4625de3c569f15aafc2","name":"Test User","githubUsername":"testuser123","YourQuote":"This is a test quote","__v":0},{"_id":"6866badae460875eb7eb81c3","name":"Test User","githubUsername":"testuser123","YourQuote":"This is a test quote","__v":0},{"_id":"6866c09a35ff623c3181af64","name":"Test User","githubUsername":"testuser123","YourQuote":"This is a test quote","__v":0},{"_id":"6866c368d56166fe3069416a","name":"Test User","githubUsername":"testuser123","YourQuote":"This is a test quote","__v":0},{"_id":"6866c9fe53c7249f7a97b2ed","name":"Test User","githubUsername":"testuser123","YourQuote":"This is a test quote","__v":0},{"_id":"686767e5a301982f1d8c7cc9","name":"Test User","githubUsername":"testuser123","YourQuote":"This is a test quote","__v":0},{"_id":"68676b3759bb64a65220b39b","name":"Test User","githubUsername":"testuser123","YourQuote":"This is a test quote","__v":0}]}'
        status_message: 200 OK
        proto_major: 0
        proto_minor: 0
        timestamp: 2025-07-04T11:18:44.768635+05:30
    created: 1751608124
    mongorequests: []
    mongoresponses: []
    postgresrequests: []
    postgresresponses: []
    grpcreq: null
    grpcresp: null
    mysqlrequests: []
    mysqlresponses: []
    reqtimestampmock: 2025-07-04T11:18:44.768635+05:30
    restimestampmock: 2025-07-04T11:18:44.768636+05:30
testmodeinfo:
    id: 0
    isfiltered: false
    sortorder: 0
connectionid: ""
---
version: api.keploy.io/v1beta1
name: mocks
kind: Http
spec:
    metadata:
        name: Http
        operation: GET
        type: HTTP_CLIENT
    genericrequests: []
    genericresponses: []
    redisrequests: []
    redisresponses: []
    httpreq:
        method: GET
        proto_major: 1
        proto_minor: 1
        url: /read
        header:
            Accept: application/json, text/plain, */*
            Accept-Encoding: gzip, deflate, br, zstd
            Accept-Language: en-US
            Connection: keep-alive
            Origin: http://localhost:5173
            Referer: http://localhost:5173/
            Sec-Ch-Ua: '"Not)A;Brand";v="8", "Chromium";v="138", "HeadlessChrome";v="138"'
            Sec-Ch-Ua-Mobile: ?0
            Sec-Ch-Ua-Platform: '"macOS"'
            Sec-Fetch-Dest: empty
            Sec-Fetch-Mode: cors
            Sec-Fetch-Site: same-site
            User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) HeadlessChrome/138.0.7204.23 Safari/537.36
        body: ""
        timestamp: 2025-07-04T11:18:45.795162+05:30
    httpresp:
        status_code: 200
        header:
            Access-Control-Allow-Origin: '*'
            Connection: keep-alive
            Content-Length: "1815"
            Content-Type: application/json; charset=utf-8
            Date: Fri, 04 Jul 2025 05:48:45 GMT
            Etag: W/"717-n6sDMZSxZhhzB51oyB7zsneojBc"
            Keep-Alive: timeout=5
            X-Powered-By: Express
        body: '{"success":true,"message":"Users fetched successfully","data":[{"_id":"6865036ec2485000aa8993eb","name":"Updated Test User","githubUsername":"updateduser123","YourQuote":"Updated test quote","__v":0},{"_id":"68650c19aca7333ce70db094","name":"tom","githubUsername":"Just","YourQuote":"see","__v":0},{"_id":"686521d38d65ad9b4738c97a","name":"Harsh","githubUsername":"None","YourQuote":"Happy World","__v":0},{"_id":"686629b457a8f15b1a559034","name":"Test User","githubUsername":"testuser123","YourQuote":"This is a test quote","__v":0},{"_id":"68662a51a3c969d8f3dfb455","name":"Test User","githubUsername":"testuser123","YourQuote":"This is a test quote","__v":0},{"_id":"6866b2a492c74e969dd16cdb","name":"Test User","githubUsername":"testuser123","YourQuote":"This is a test quote","__v":0},{"_id":"6866b322ed73c5f3fe9c138f","name":"Test User","githubUsername":"testuser123","YourQuote":"This is a test quote","__v":0},{"_id":"6866b4625de3c569f15aafc2","name":"Test User","githubUsername":"testuser123","YourQuote":"This is a test quote","__v":0},{"_id":"6866badae460875eb7eb81c3","name":"Test User","githubUsername":"testuser123","YourQuote":"This is a test quote","__v":0},{"_id":"6866c09a35ff623c3181af64","name":"Test User","githubUsername":"testuser123","YourQuote":"This is a test quote","__v":0},{"_id":"6866c368d56166fe3069416a","name":"Test User","githubUsername":"testuser123","YourQuote":"This is a test quote","__v":0},{"_id":"6866c9fe53c7249f7a97b2ed","name":"Test User","githubUsername":"testuser123","YourQuote":"This is a test quote","__v":0},{"_id":"686767e5a301982f1d8c7cc9","name":"Test User","githubUsername":"testuser123","YourQuote":"This is a test quote","__v":0},{"_id":"68676b3759bb64a65220b39b","name":"Test User","githubUsername":"testuser123","YourQuote":"This is a test quote","__v":0}]}'
        status_message: 200 OK
        proto_major: 0
        proto_minor: 0
        timestamp: 2025-07-04T11:18:45.795163+05:30
    created: 1751608125
    mongorequests: []
    mongoresponses: []
    postgresrequests: []
    postgresresponses: []
    grpcreq: null
    grpcresp: null
    mysqlrequests: []
    mysqlresponses: []
    reqtimestampmock: 2025-07-04T11:18:45.795164+05:30
    restimestampmock: 2025-07-04T11:18:45.795164+05:30
testmodeinfo:
    id: 0
    isfiltered: false
    sortorder: 0
connectionid: ""
---
version: api.keploy.io/v1beta1
name: mocks
kind: Http
spec:
    metadata:
        name: Http
        operation: OPTIONS
        type: HTTP_CLIENT
    genericrequests: []
    genericresponses: []
    redisrequests: []
    redisresponses: []
    httpreq:
        method: OPTIONS
        proto_major: 1
        proto_minor: 1
        url: /delete
        header:
            Accept: '*/*'
            Accept-Encoding: gzip, deflate, br, zstd
            Access-Control-Request-Headers: content-type
            Access-Control-Request-Method: POST
            Connection: keep-alive
            Origin: http://localhost:5173
            Referer: http://localhost:5173/
            Sec-Fetch-Dest: empty
            Sec-Fetch-Mode: cors
            Sec-Fetch-Site: same-site
            User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) HeadlessChrome/138.0.7204.23 Safari/537.36
        body: ""
        timestamp: 2025-07-04T11:18:46.266652+05:30
    httpresp:
        status_code: 204
        header:
            Access-Control-Allow-Headers: content-type
            Access-Control-Allow-Methods: GET,HEAD,PUT,PATCH,POST,DELETE
            Access-Control-Allow-Origin: '*'
            Connection: keep-alive
            Content-Length: "0"
            Date: Fri, 04 Jul 2025 05:48:46 GMT
            Keep-Alive: timeout=5
            Vary: Access-Control-Request-Headers
            X-Powered-By: Express
        body: ""
        status_message: 204 No Content
        proto_major: 0
        proto_minor: 0
        timestamp: 2025-07-04T11:18:46.266653+05:30
    created: 1751608126
    mongorequests: []
    mongoresponses: []
    postgresrequests: []
    postgresresponses: []
    grpcreq: null
    grpcresp: null
    mysqlrequests: []
    mysqlresponses: []
    reqtimestampmock: 2025-07-04T11:18:46.266653+05:30
    restimestampmock: 2025-07-04T11:18:46.266653+05:30
testmodeinfo:
    id: 0
    isfiltered: false
    sortorder: 0
connectionid: ""
---
version: api.keploy.io/v1beta1
name: mocks
kind: Http
spec:
    metadata:
        name: Http
        operation: POST
        type: HTTP_CLIENT
    genericrequests: []
    genericresponses: []
    redisrequests: []
    redisresponses: []
    httpreq:
        method: POST
        proto_major: 1
        proto_minor: 1
        url: /delete
        header:
            Accept: application/json, text/plain, */*
            Accept-Encoding: gzip, deflate, br, zstd
            Accept-Language: en-US
            Connection: keep-alive
            Content-Length: "33"
            Content-Type: application/json
            Origin: http://localhost:5173
            Referer: http://localhost:5173/
            Sec-Ch-Ua: '"Not)A;Brand";v="8", "Chromium";v="138", "HeadlessChrome";v="138"'
            Sec-Ch-Ua-Mobile: ?0
            Sec-Ch-Ua-Platform: '"macOS"'
            Sec-Fetch-Dest: empty
            Sec-Fetch-Mode: cors
            Sec-Fetch-Site: same-site
            User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) HeadlessChrome/138.0.7204.23 Safari/537.36
        body: ""
        timestamp: 2025-07-04T11:18:46.628195+05:30
    httpresp:
        status_code: 200
        header:
            Access-Control-Allow-Origin: '*'
            Connection: keep-alive
            Content-Length: "86"
            Content-Type: application/json; charset=utf-8
            Date: Fri, 04 Jul 2025 05:48:46 GMT
            Etag: W/"56-M9pvW/2ePNZ9pDcwTS9K+m0YOQY"
            Keep-Alive: timeout=5
            X-Powered-By: Express
        body: '{"success":true,"message":"User deleted successfully","id":"6865036ec2485000aa8993eb"}'
        status_message: 200 OK
        proto_major: 0
        proto_minor: 0
        timestamp: 2025-07-04T11:18:46.628197+05:30
    created: 1751608126
    mongorequests: []
    mongoresponses: []
    postgresrequests: []
    postgresresponses: []
    grpcreq: null
    grpcresp: null
    mysqlrequests: []
    mysqlresponses: []
    reqtimestampmock: 2025-07-04T11:18:46.628198+05:30
    restimestampmock: 2025-07-04T11:18:46.628198+05:30
testmodeinfo:
    id: 0
    isfiltered: false
    sortorder: 0
connectionid: ""
---
version: api.keploy.io/v1beta1
name: mocks
kind: Http
spec:
    metadata:
        name: Http
        operation: OPTIONS
        type: HTTP_CLIENT
    genericrequests: []
    genericresponses: []
    redisrequests: []
    redisresponses: []
    httpreq:
        method: OPTIONS
        proto_major: 1
        proto_minor: 1
        url: /add
        header:
            Accept: '*/*'
            Accept-Encoding: gzip, deflate, br, zstd
            Access-Control-Request-Headers: content-type
            Access-Control-Request-Method: POST
            Connection: keep-alive
            Origin: http://localhost:5173
            Referer: http://localhost:5173/
            Sec-Fetch-Dest: empty
            Sec-Fetch-Mode: cors
            Sec-Fetch-Site: same-site
            User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) HeadlessChrome/138.0.7204.23 Safari/537.36
        body: ""
        timestamp: 2025-07-04T11:18:48.599384+05:30
    httpresp:
        status_code: 204
        header:
            Access-Control-Allow-Headers: content-type
            Access-Control-Allow-Methods: GET,HEAD,PUT,PATCH,POST,DELETE
            Access-Control-Allow-Origin: '*'
            Connection: keep-alive
            Content-Length: "0"
            Date: Fri, 04 Jul 2025 05:48:48 GMT
            Keep-Alive: timeout=5
            Vary: Access-Control-Request-Headers
            X-Powered-By: Express
        body: ""
        status_message: 204 No Content
        proto_major: 0
        proto_minor: 0
        timestamp: 2025-07-04T11:18:48.599385+05:30
    created: 1751608128
    mongorequests: []
    mongoresponses: []
    postgresrequests: []
    postgresresponses: []
    grpcreq: null
    grpcresp: null
    mysqlrequests: []
    mysqlresponses: []
    reqtimestampmock: 2025-07-04T11:18:48.599385+05:30
    restimestampmock: 2025-07-04T11:18:48.599385+05:30
testmodeinfo:
    id: 0
    isfiltered: false
    sortorder: 0
connectionid: ""
---
version: api.keploy.io/v1beta1
name: mocks
kind: Http
spec:
    metadata:
        name: Http
        operation: POST
        type: HTTP_CLIENT
    genericrequests: []
    genericresponses: []
    redisrequests: []
    redisresponses: []
    httpreq:
        method: POST
        proto_major: 1
        proto_minor: 1
        url: /add
        header:
            Accept: application/json, text/plain, */*
            Accept-Encoding: gzip, deflate, br, zstd
            Accept-Language: en-US
            Connection: keep-alive
            Content-Length: "102"
            Content-Type: application/json
            Origin: http://localhost:5173
            Referer: http://localhost:5173/
            Sec-Ch-Ua: '"Not)A;Brand";v="8", "Chromium";v="138", "HeadlessChrome";v="138"'
            Sec-Ch-Ua-Mobile: ?0
            Sec-Ch-Ua-Platform: '"macOS"'
            Sec-Fetch-Dest: empty
            Sec-Fetch-Mode: cors
            Sec-Fetch-Site: same-site
            User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) HeadlessChrome/138.0.7204.23 Safari/537.36
        body: ""
        timestamp: 2025-07-04T11:18:48.957693+05:30
    httpresp:
        status_code: 200
        header:
            Access-Control-Allow-Origin: '*'
            Connection: keep-alive
            Content-Length: "162"
            Content-Type: application/json; charset=utf-8
            Date: Fri, 04 Jul 2025 05:48:48 GMT
            Etag: W/"a2-Mtz82xh4+izth4cjRsHs/ewr1uk"
            Keep-Alive: timeout=5
            X-Powered-By: Express
        body: '{"success":true,"message":"User added successfully","data":{"name":"Flow Test User 1751608128463","githubUsername":"flowtest123","YourQuote":"Testing full flow"}}'
        status_message: 200 OK
        proto_major: 0
        proto_minor: 0
        timestamp: 2025-07-04T11:18:48.957701+05:30
    created: 1751608128
    mongorequests: []
    mongoresponses: []
    postgresrequests: []
    postgresresponses: []
    grpcreq: null
    grpcresp: null
    mysqlrequests: []
    mysqlresponses: []
    reqtimestampmock: 2025-07-04T11:18:48.957701+05:30
    restimestampmock: 2025-07-04T11:18:48.957702+05:30
testmodeinfo:
    id: 0
    isfiltered: false
    sortorder: 0
connectionid: ""
---
version: api.keploy.io/v1beta1
name: mocks
kind: Http
spec:
    metadata:
        name: Http
        operation: GET
        type: HTTP_CLIENT
    genericrequests: []
    genericresponses: []
    redisrequests: []
    redisresponses: []
    httpreq:
        method: GET
        proto_major: 1
        proto_minor: 1
        url: /read
        header:
            Accept: application/json, text/plain, */*
            Accept-Encoding: gzip, deflate, br, zstd
            Accept-Language: en-US
            Connection: keep-alive
            Origin: http://localhost:5173
            Referer: http://localhost:5173/
            Sec-Ch-Ua: '"Not)A;Brand";v="8", "Chromium";v="138", "HeadlessChrome";v="138"'
            Sec-Ch-Ua-Mobile: ?0
            Sec-Ch-Ua-Platform: '"macOS"'
            Sec-Fetch-Dest: empty
            Sec-Fetch-Mode: cors
            Sec-Fetch-Site: same-site
            User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) HeadlessChrome/138.0.7204.23 Safari/537.36
        body: ""
        timestamp: 2025-07-04T11:18:49.32042+05:30
    httpresp:
        status_code: 200
        header:
            Access-Control-Allow-Origin: '*'
            Connection: keep-alive
            Content-Length: "1822"
            Content-Type: application/json; charset=utf-8
            Date: Fri, 04 Jul 2025 05:48:49 GMT
            Etag: W/"71e-zcTSuajsqjzk+f0cvqvp9JJc+9k"
            Keep-Alive: timeout=5
            X-Powered-By: Express
        body: '{"success":true,"message":"Users fetched successfully","data":[{"_id":"68650c19aca7333ce70db094","name":"tom","githubUsername":"Just","YourQuote":"see","__v":0},{"_id":"686521d38d65ad9b4738c97a","name":"Harsh","githubUsername":"None","YourQuote":"Happy World","__v":0},{"_id":"686629b457a8f15b1a559034","name":"Test User","githubUsername":"testuser123","YourQuote":"This is a test quote","__v":0},{"_id":"68662a51a3c969d8f3dfb455","name":"Test User","githubUsername":"testuser123","YourQuote":"This is a test quote","__v":0},{"_id":"6866b2a492c74e969dd16cdb","name":"Test User","githubUsername":"testuser123","YourQuote":"This is a test quote","__v":0},{"_id":"6866b322ed73c5f3fe9c138f","name":"Test User","githubUsername":"testuser123","YourQuote":"This is a test quote","__v":0},{"_id":"6866b4625de3c569f15aafc2","name":"Test User","githubUsername":"testuser123","YourQuote":"This is a test quote","__v":0},{"_id":"6866badae460875eb7eb81c3","name":"Test User","githubUsername":"testuser123","YourQuote":"This is a test quote","__v":0},{"_id":"6866c09a35ff623c3181af64","name":"Test User","githubUsername":"testuser123","YourQuote":"This is a test quote","__v":0},{"_id":"6866c368d56166fe3069416a","name":"Test User","githubUsername":"testuser123","YourQuote":"This is a test quote","__v":0},{"_id":"6866c9fe53c7249f7a97b2ed","name":"Test User","githubUsername":"testuser123","YourQuote":"This is a test quote","__v":0},{"_id":"686767e5a301982f1d8c7cc9","name":"Test User","githubUsername":"testuser123","YourQuote":"This is a test quote","__v":0},{"_id":"68676b3759bb64a65220b39b","name":"Test User","githubUsername":"testuser123","YourQuote":"This is a test quote","__v":0},{"_id":"68676b4059bb64a65220b3a5","name":"Flow Test User 1751608128463","githubUsername":"flowtest123","YourQuote":"Testing full flow","__v":0}]}'
        status_message: 200 OK
        proto_major: 0
        proto_minor: 0
        timestamp: 2025-07-04T11:18:49.320423+05:30
    created: 1751608129
    mongorequests: []
    mongoresponses: []
    postgresrequests: []
    postgresresponses: []
    grpcreq: null
    grpcresp: null
    mysqlrequests: []
    mysqlresponses: []
    reqtimestampmock: 2025-07-04T11:18:49.320423+05:30
    restimestampmock: 2025-07-04T11:18:49.320423+05:30
testmodeinfo:
    id: 0
    isfiltered: false
    sortorder: 0
connectionid: ""
---
version: api.keploy.io/v1beta1
name: mocks
kind: Http
spec:
    metadata:
        name: Http
        operation: GET
        type: HTTP_CLIENT
    genericrequests: []
    genericresponses: []
    redisrequests: []
    redisresponses: []
    httpreq:
        method: GET
        proto_major: 1
        proto_minor: 1
        url: /edit/68676b4059bb64a65220b3a5
        header:
            Accept: application/json, text/plain, */*
            Accept-Encoding: gzip, deflate, br, zstd
            Accept-Language: en-US
            Connection: keep-alive
            Origin: http://localhost:5173
            Referer: http://localhost:5173/
            Sec-Ch-Ua: '"Not)A;Brand";v="8", "Chromium";v="138", "HeadlessChrome";v="138"'
            Sec-Ch-Ua-Mobile: ?0
            Sec-Ch-Ua-Platform: '"macOS"'
            Sec-Fetch-Dest: empty
            Sec-Fetch-Mode: cors
            Sec-Fetch-Site: same-site
            User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) HeadlessChrome/138.0.7204.23 Safari/537.36
        body: ""
        timestamp: 2025-07-04T11:18:50.372735+05:30
    httpresp:
        status_code: 200
        header:
            Access-Control-Allow-Origin: '*'
            Connection: keep-alive
            Content-Length: "203"
            Content-Type: application/json; charset=utf-8
            Date: Fri, 04 Jul 2025 05:48:50 GMT
            Etag: W/"cb-g0AYTmhSkgW10N//A77nw6lEAoE"
            Keep-Alive: timeout=5
            X-Powered-By: Express
        body: '{"success":true,"message":"User found successfully","data":{"_id":"68676b4059bb64a65220b3a5","name":"Flow Test User 1751608128463","githubUsername":"flowtest123","YourQuote":"Testing full flow","__v":0}}'
        status_message: 200 OK
        proto_major: 0
        proto_minor: 0
        timestamp: 2025-07-04T11:18:50.372737+05:30
    created: 1751608130
    mongorequests: []
    mongoresponses: []
    postgresrequests: []
    postgresresponses: []
    grpcreq: null
    grpcresp: null
    mysqlrequests: []
    mysqlresponses: []
    reqtimestampmock: 2025-07-04T11:18:50.372737+05:30
    restimestampmock: 2025-07-04T11:18:50.372737+05:30
testmodeinfo:
    id: 0
    isfiltered: false
    sortorder: 0
connectionid: ""
---
version: api.keploy.io/v1beta1
name: mocks
kind: Http
spec:
    metadata:
        name: Http
        operation: OPTIONS
        type: HTTP_CLIENT
    genericrequests: []
    genericresponses: []
    redisrequests: []
    redisresponses: []
    httpreq:
        method: OPTIONS
        proto_major: 1
        proto_minor: 1
        url: /edit/68676b4059bb64a65220b3a5
        header:
            Accept: '*/*'
            Accept-Encoding: gzip, deflate, br, zstd
            Access-Control-Request-Headers: content-type
            Access-Control-Request-Method: POST
            Connection: keep-alive
            Origin: http://localhost:5173
            Referer: http://localhost:5173/
            Sec-Fetch-Dest: empty
            Sec-Fetch-Mode: cors
            Sec-Fetch-Site: same-site
            User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) HeadlessChrome/138.0.7204.23 Safari/537.36
        body: ""
        timestamp: 2025-07-04T11:18:50.451753+05:30
    httpresp:
        status_code: 204
        header:
            Access-Control-Allow-Headers: content-type
            Access-Control-Allow-Methods: GET,HEAD,PUT,PATCH,POST,DELETE
            Access-Control-Allow-Origin: '*'
            Connection: keep-alive
            Content-Length: "0"
            Date: Fri, 04 Jul 2025 05:48:50 GMT
            Keep-Alive: timeout=5
            Vary: Access-Control-Request-Headers
            X-Powered-By: Express
        body: ""
        status_message: 204 No Content
        proto_major: 0
        proto_minor: 0
        timestamp: 2025-07-04T11:18:50.451755+05:30
    created: 1751608130
    mongorequests: []
    mongoresponses: []
    postgresrequests: []
    postgresresponses: []
    grpcreq: null
    grpcresp: null
    mysqlrequests: []
    mysqlresponses: []
    reqtimestampmock: 2025-07-04T11:18:50.451755+05:30
    restimestampmock: 2025-07-04T11:18:50.451755+05:30
testmodeinfo:
    id: 0
    isfiltered: false
    sortorder: 0
connectionid: ""
---
version: api.keploy.io/v1beta1
name: mocks
kind: Http
spec:
    metadata:
        name: Http
        operation: POST
        type: HTTP_CLIENT
    genericrequests: []
    genericresponses: []
    redisrequests: []
    redisresponses: []
    httpreq:
        method: POST
        proto_major: 1
        proto_minor: 1
        url: /edit/68676b4059bb64a65220b3a5
        header:
            Accept: application/json, text/plain, */*
            Accept-Encoding: gzip, deflate, br, zstd
            Accept-Language: en-US
            Connection: keep-alive
            Content-Length: "151"
            Content-Type: application/json
            Origin: http://localhost:5173
            Referer: http://localhost:5173/
            Sec-Ch-Ua: '"Not)A;Brand";v="8", "Chromium";v="138", "HeadlessChrome";v="138"'
            Sec-Ch-Ua-Mobile: ?0
            Sec-Ch-Ua-Platform: '"macOS"'
            Sec-Fetch-Dest: empty
            Sec-Fetch-Mode: cors
            Sec-Fetch-Site: same-site
            User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) HeadlessChrome/138.0.7204.23 Safari/537.36
        body: ""
        timestamp: 2025-07-04T11:18:50.80628+05:30
    httpresp:
        status_code: 200
        header:
            Access-Control-Allow-Origin: '*'
            Connection: keep-alive
            Content-Length: "205"
            Content-Type: application/json; charset=utf-8
            Date: Fri, 04 Jul 2025 05:48:50 GMT
            Etag: W/"cd-QuDctJzeQv9SXHj/CEH3WXTOFxA"
            Keep-Alive: timeout=5
            X-Powered-By: Express
        body: '{"success":true,"message":"User updated successfully","data":{"_id":"68676b4059bb64a65220b3a5","name":"Flow Test User 1751608128463","githubUsername":"flowtest123","YourQuote":"Testing full flow","__v":0}}'
        status_message: 200 OK
        proto_major: 0
        proto_minor: 0
        timestamp: 2025-07-04T11:18:50.806283+05:30
    created: 1751608130
    mongorequests: []
    mongoresponses: []
    postgresrequests: []
    postgresresponses: []
    grpcreq: null
    grpcresp: null
    mysqlrequests: []
    mysqlresponses: []
    reqtimestampmock: 2025-07-04T11:18:50.806283+05:30
    restimestampmock: 2025-07-04T11:18:50.806283+05:30
testmodeinfo:
    id: 0
    isfiltered: false
    sortorder: 0
connectionid: ""
---
version: api.keploy.io/v1beta1
name: mocks
kind: Http
spec:
    metadata:
        name: Http
        operation: GET
        type: HTTP_CLIENT
    genericrequests: []
    genericresponses: []
    redisrequests: []
    redisresponses: []
    httpreq:
        method: GET
        proto_major: 1
        proto_minor: 1
        url: /read
        header:
            Accept: application/json, text/plain, */*
            Accept-Encoding: gzip, deflate, br, zstd
            Accept-Language: en-US
            Connection: keep-alive
            Origin: http://localhost:5173
            Referer: http://localhost:5173/
            Sec-Ch-Ua: '"Not)A;Brand";v="8", "Chromium";v="138", "HeadlessChrome";v="138"'
            Sec-Ch-Ua-Mobile: ?0
            Sec-Ch-Ua-Platform: '"macOS"'
            Sec-Fetch-Dest: empty
            Sec-Fetch-Mode: cors
            Sec-Fetch-Site: same-site
            User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) HeadlessChrome/138.0.7204.23 Safari/537.36
        body: ""
        timestamp: 2025-07-04T11:18:51.800071+05:30
    httpresp:
        status_code: 200
        header:
            Access-Control-Allow-Origin: '*'
            Connection: keep-alive
            Content-Length: "1830"
            Content-Type: application/json; charset=utf-8
            Date: Fri, 04 Jul 2025 05:48:51 GMT
            Etag: W/"726-GwqumMVGLXjBquKJvMgOcxHYkEs"
            Keep-Alive: timeout=5
            X-Powered-By: Express
        body: '{"success":true,"message":"Users fetched successfully","data":[{"_id":"68650c19aca7333ce70db094","name":"tom","githubUsername":"Just","YourQuote":"see","__v":0},{"_id":"686521d38d65ad9b4738c97a","name":"Harsh","githubUsername":"None","YourQuote":"Happy World","__v":0},{"_id":"686629b457a8f15b1a559034","name":"Test User","githubUsername":"testuser123","YourQuote":"This is a test quote","__v":0},{"_id":"68662a51a3c969d8f3dfb455","name":"Test User","githubUsername":"testuser123","YourQuote":"This is a test quote","__v":0},{"_id":"6866b2a492c74e969dd16cdb","name":"Test User","githubUsername":"testuser123","YourQuote":"This is a test quote","__v":0},{"_id":"6866b322ed73c5f3fe9c138f","name":"Test User","githubUsername":"testuser123","YourQuote":"This is a test quote","__v":0},{"_id":"6866b4625de3c569f15aafc2","name":"Test User","githubUsername":"testuser123","YourQuote":"This is a test quote","__v":0},{"_id":"6866badae460875eb7eb81c3","name":"Test User","githubUsername":"testuser123","YourQuote":"This is a test quote","__v":0},{"_id":"6866c09a35ff623c3181af64","name":"Test User","githubUsername":"testuser123","YourQuote":"This is a test quote","__v":0},{"_id":"6866c368d56166fe3069416a","name":"Test User","githubUsername":"testuser123","YourQuote":"This is a test quote","__v":0},{"_id":"6866c9fe53c7249f7a97b2ed","name":"Test User","githubUsername":"testuser123","YourQuote":"This is a test quote","__v":0},{"_id":"686767e5a301982f1d8c7cc9","name":"Test User","githubUsername":"testuser123","YourQuote":"This is a test quote","__v":0},{"_id":"68676b3759bb64a65220b39b","name":"Test User","githubUsername":"testuser123","YourQuote":"This is a test quote","__v":0},{"_id":"68676b4059bb64a65220b3a5","name":"Flow Test User 1751608128463 Updated","githubUsername":"flowtest123","YourQuote":"Testing full flow","__v":0}]}'
        status_message: 200 OK
        proto_major: 0
        proto_minor: 0
        timestamp: 2025-07-04T11:18:51.800073+05:30
    created: 1751608131
    mongorequests: []
    mongoresponses: []
    postgresrequests: []
    postgresresponses: []
    grpcreq: null
    grpcresp: null
    mysqlrequests: []
    mysqlresponses: []
    reqtimestampmock: 2025-07-04T11:18:51.800073+05:30
    restimestampmock: 2025-07-04T11:18:51.800073+05:30
testmodeinfo:
    id: 0
    isfiltered: false
    sortorder: 0
connectionid: ""
---
version: api.keploy.io/v1beta1
name: mocks
kind: Http
spec:
    metadata:
        name: Http
        operation: OPTIONS
        type: HTTP_CLIENT
    genericrequests: []
    genericresponses: []
    redisrequests: []
    redisresponses: []
    httpreq:
        method: OPTIONS
        proto_major: 1
        proto_minor: 1
        url: /delete
        header:
            Accept: '*/*'
            Accept-Encoding: gzip, deflate, br, zstd
            Access-Control-Request-Headers: content-type
            Access-Control-Request-Method: POST
            Connection: keep-alive
            Origin: http://localhost:5173
            Referer: http://localhost:5173/
            Sec-Fetch-Dest: empty
            Sec-Fetch-Mode: cors
            Sec-Fetch-Site: same-site
            User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) HeadlessChrome/138.0.7204.23 Safari/537.36
        body: ""
        timestamp: 2025-07-04T11:18:52.356439+05:30
    httpresp:
        status_code: 204
        header:
            Access-Control-Allow-Headers: content-type
            Access-Control-Allow-Methods: GET,HEAD,PUT,PATCH,POST,DELETE
            Access-Control-Allow-Origin: '*'
            Connection: keep-alive
            Content-Length: "0"
            Date: Fri, 04 Jul 2025 05:48:52 GMT
            Keep-Alive: timeout=5
            Vary: Access-Control-Request-Headers
            X-Powered-By: Express
        body: ""
        status_message: 204 No Content
        proto_major: 0
        proto_minor: 0
        timestamp: 2025-07-04T11:18:52.356441+05:30
    created: 1751608132
    mongorequests: []
    mongoresponses: []
    postgresrequests: []
    postgresresponses: []
    grpcreq: null
    grpcresp: null
    mysqlrequests: []
    mysqlresponses: []
    reqtimestampmock: 2025-07-04T11:18:52.356442+05:30
    restimestampmock: 2025-07-04T11:18:52.356442+05:30
testmodeinfo:
    id: 0
    isfiltered: false
    sortorder: 0
connectionid: ""
---
version: api.keploy.io/v1beta1
name: mocks
kind: Http
spec:
    metadata:
        name: Http
        operation: POST
        type: HTTP_CLIENT
    genericrequests: []
    genericresponses: []
    redisrequests: []
    redisresponses: []
    httpreq:
        method: POST
        proto_major: 1
        proto_minor: 1
        url: /delete
        header:
            Accept: application/json, text/plain, */*
            Accept-Encoding: gzip, deflate, br, zstd
            Accept-Language: en-US
            Connection: keep-alive
            Content-Length: "33"
            Content-Type: application/json
            Origin: http://localhost:5173
            Referer: http://localhost:5173/
            Sec-Ch-Ua: '"Not)A;Brand";v="8", "Chromium";v="138", "HeadlessChrome";v="138"'
            Sec-Ch-Ua-Mobile: ?0
            Sec-Ch-Ua-Platform: '"macOS"'
            Sec-Fetch-Dest: empty
            Sec-Fetch-Mode: cors
            Sec-Fetch-Site: same-site
            User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) HeadlessChrome/138.0.7204.23 Safari/537.36
        body: ""
        timestamp: 2025-07-04T11:18:52.70728+05:30
    httpresp:
        status_code: 200
        header:
            Access-Control-Allow-Origin: '*'
            Connection: keep-alive
            Content-Length: "86"
            Content-Type: application/json; charset=utf-8
            Date: Fri, 04 Jul 2025 05:48:52 GMT
            Etag: W/"56-hHsg7mJOxMNdTv//wlHbJWEdJAw"
            Keep-Alive: timeout=5
            X-Powered-By: Express
        body: '{"success":true,"message":"User deleted successfully","id":"68676b4059bb64a65220b3a5"}'
        status_message: 200 OK
        proto_major: 0
        proto_minor: 0
        timestamp: 2025-07-04T11:18:52.707282+05:30
    created: 1751608132
    mongorequests: []
    mongoresponses: []
    postgresrequests: []
    postgresresponses: []
    grpcreq: null
    grpcresp: null
    mysqlrequests: []
    mysqlresponses: []
    reqtimestampmock: 2025-07-04T11:18:52.707282+05:30
    restimestampmock: 2025-07-04T11:18:52.707283+05:30
testmodeinfo:
    id: 0
    isfiltered: false
    sortorder: 0
connectionid: ""
---
version: api.keploy.io/v1beta1
name: mocks
kind: Http
spec:
    metadata:
        name: Http
        operation: GET
        type: HTTP_CLIENT
    genericrequests: []
    genericresponses: []
    redisrequests: []
    redisresponses: []
    httpreq:
        method: GET
        proto_major: 1
        proto_minor: 1
        url: /read
        header:
            Accept: application/json, text/plain, */*
            Accept-Encoding: gzip, deflate, br, zstd
            Accept-Language: en-US
            Connection: keep-alive
            Origin: http://localhost:5173
            Referer: http://localhost:5173/
            Sec-Ch-Ua: '"Not)A;Brand";v="8", "Chromium";v="138", "HeadlessChrome";v="138"'
            Sec-Ch-Ua-Mobile: ?0
            Sec-Ch-Ua-Platform: '"macOS"'
            Sec-Fetch-Dest: empty
            Sec-Fetch-Mode: cors
            Sec-Fetch-Site: same-site
            User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) HeadlessChrome/138.0.7204.23 Safari/537.36
        body: ""
        timestamp: 2025-07-04T11:18:54.734133+05:30
    httpresp:
        status_code: 200
        header:
            Access-Control-Allow-Origin: '*'
            Connection: keep-alive
            Content-Length: "1678"
            Content-Type: application/json; charset=utf-8
            Date: Fri, 04 Jul 2025 05:48:54 GMT
            Etag: W/"68e-fDSydAtxpTn9VhXcXNMrGkgyOPY"
            Keep-Alive: timeout=5
            X-Powered-By: Express
        body: '{"success":true,"message":"Users fetched successfully","data":[{"_id":"68650c19aca7333ce70db094","name":"tom","githubUsername":"Just","YourQuote":"see","__v":0},{"_id":"686521d38d65ad9b4738c97a","name":"Harsh","githubUsername":"None","YourQuote":"Happy World","__v":0},{"_id":"686629b457a8f15b1a559034","name":"Test User","githubUsername":"testuser123","YourQuote":"This is a test quote","__v":0},{"_id":"68662a51a3c969d8f3dfb455","name":"Test User","githubUsername":"testuser123","YourQuote":"This is a test quote","__v":0},{"_id":"6866b2a492c74e969dd16cdb","name":"Test User","githubUsername":"testuser123","YourQuote":"This is a test quote","__v":0},{"_id":"6866b322ed73c5f3fe9c138f","name":"Test User","githubUsername":"testuser123","YourQuote":"This is a test quote","__v":0},{"_id":"6866b4625de3c569f15aafc2","name":"Test User","githubUsername":"testuser123","YourQuote":"This is a test quote","__v":0},{"_id":"6866badae460875eb7eb81c3","name":"Test User","githubUsername":"testuser123","YourQuote":"This is a test quote","__v":0},{"_id":"6866c09a35ff623c3181af64","name":"Test User","githubUsername":"testuser123","YourQuote":"This is a test quote","__v":0},{"_id":"6866c368d56166fe3069416a","name":"Test User","githubUsername":"testuser123","YourQuote":"This is a test quote","__v":0},{"_id":"6866c9fe53c7249f7a97b2ed","name":"Test User","githubUsername":"testuser123","YourQuote":"This is a test quote","__v":0},{"_id":"686767e5a301982f1d8c7cc9","name":"Test User","githubUsername":"testuser123","YourQuote":"This is a test quote","__v":0},{"_id":"68676b3759bb64a65220b39b","name":"Test User","githubUsername":"testuser123","YourQuote":"This is a test quote","__v":0}]}'
        status_message: 200 OK
        proto_major: 0
        proto_minor: 0
        timestamp: 2025-07-04T11:18:54.734139+05:30
    created: 1751608134
    mongorequests: []
    mongoresponses: []
    postgresrequests: []
    postgresresponses: []
    grpcreq: null
    grpcresp: null
    mysqlrequests: []
    mysqlresponses: []
    reqtimestampmock: 2025-07-04T11:18:54.734139+05:30
    restimestampmock: 2025-07-04T11:18:54.734139+05:30
testmodeinfo:
    id: 0
    isfiltered: false
    sortorder: 0
connectionid: ""
